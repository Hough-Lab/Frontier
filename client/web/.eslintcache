[{"/Users/alexandra/Frontier/client/web/src/index.tsx":"1","/Users/alexandra/Frontier/client/web/src/reportWebVitals.ts":"2","/Users/alexandra/Frontier/client/web/src/App.tsx":"3","/Users/alexandra/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx":"4","/Users/alexandra/Frontier/client/web/src/components/MapComponent/MapComponent.tsx":"5","/Users/alexandra/Frontier/client/web/src/googleConfig.js":"6","/Users/alexandra/Frontier/client/web/src/utils/mapFunctions.ts":"7","/Users/alexandra/Frontier/client/web/src/components/LocationAutoCompleteInput/LocationAutoCompleteInput.js":"8","/Users/alexandra/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx":"9","/Users/alexandra/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx":"10"},{"size":500,"mtime":1612172492756,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1612172492756,"results":"13","hashOfConfig":"12"},{"size":1420,"mtime":1612268575499,"results":"14","hashOfConfig":"12"},{"size":497,"mtime":1612260629248,"results":"15","hashOfConfig":"12"},{"size":1302,"mtime":1612285968532,"results":"16","hashOfConfig":"12"},{"size":78,"mtime":1612257494531,"results":"17","hashOfConfig":"12"},{"size":637,"mtime":1612286125593,"results":"18","hashOfConfig":"12"},{"size":2339,"mtime":1612291118234,"results":"19","hashOfConfig":"12"},{"size":2379,"mtime":1612295148285,"results":"20","hashOfConfig":"12"},{"size":2103,"mtime":1612295181242,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1k2wfyn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexandra/Frontier/client/web/src/index.tsx",[],["47","48"],"/Users/alexandra/Frontier/client/web/src/reportWebVitals.ts",[],"/Users/alexandra/Frontier/client/web/src/App.tsx",["49"],"import React, { useState, useEffect } from \"react\";\nimport HomeScreen from \"./screens/HomeScreen/HomeScreen\";\nimport { checkLocationEnabled } from \"./utils/mapFunctions\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { CreateEventScreen } from \"./screens/CreateEventScreen/CreateEventScreen\";\nimport { CreateTipScreen } from \"./screens/CreateTipScreen/CreateTipScreen\";\n\nfunction App() {\n  // userStartLocation = checkLocationEnabled();\n  const [userCoordinates, setUserCoordinates] = useState(\n    checkLocationEnabled()\n  );\n  // console.log(userStartLocation);\n  //useEffect(() => {}, [setUserCoordinates]);\n\n  useEffect(() => {});\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/createEvent\">Create Event</Link>\n            </li>\n            <li>\n              <Link to=\"/createTip\">Create Tip</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/createEvent\">\n            <CreateEventScreen />\n          </Route>\n          <Route path=\"/createTip\">\n            <CreateTipScreen />\n          </Route>\n          <Route path=\"/\">\n            <HomeScreen userCoordinates={userCoordinates} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/alexandra/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/components/MapComponent/MapComponent.tsx",["50"],"import React, { useEffect, CSSProperties } from \"react\";\n\nimport \"./MapComponent.css\";\n\nimport { GoogleKey } from \"../../googleConfig\";\n\ninterface IProps {\n  userCoordinates: {\n    lat: number;\n    lng: number;\n  };\n  style: CSSProperties;\n}\n\nconst MapComponent = ({ userCoordinates, style }: IProps) => {\n  function initMap(): void {\n    let map = new window.google.maps.Map(\n      document.getElementById(\"map\") as HTMLElement,\n      {\n        center: userCoordinates,\n        zoom: 9,\n        streetViewControl: false,\n      }\n    );\n    //\n    console.log(userCoordinates);\n    // Center map to user's position.\n    map.panTo(userCoordinates);\n    new window.google.maps.Marker({\n      position: userCoordinates,\n      map,\n      title: \"Hello World!\",\n    });\n  }\n  useEffect(() => {\n    console.log(\"GoogleKey :>> \", GoogleKey);\n    const googleMapScript = document.createElement(\"script\");\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${GoogleKey}&libraries=places`;\n    googleMapScript.async = true;\n    window.document.body.appendChild(googleMapScript);\n    googleMapScript.addEventListener(\"load\", () => {\n      initMap();\n    });\n  }, []);\n\n  return (\n    <div style={style} id=\"mapContainer\">\n      <div id=\"map\" />\n    </div>\n  );\n};\nexport default MapComponent;\n","/Users/alexandra/Frontier/client/web/src/googleConfig.js",[],["51","52"],"/Users/alexandra/Frontier/client/web/src/utils/mapFunctions.ts",[],"/Users/alexandra/Frontier/client/web/src/components/LocationAutoCompleteInput/LocationAutoCompleteInput.js",["53"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"./LocationAutoCompleteInput.css\";\nimport { GoogleKey } from \"../../googleConfig\";\n\nlet autoComplete;\nlet setChosenLocation;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef, setChosenLocation) {\n  autoComplete = new window.google.maps.places.Autocomplete(\n    autoCompleteRef.current\n  );\n  autoComplete.setFields([\n    \"address_components\",\n    \"formatted_address\",\n    \"geometry\",\n  ]);\n  autoComplete.addListener(\"place_changed\", () =>\n    handlePlaceSelect(updateQuery, setChosenLocation)\n  );\n}\n\nasync function handlePlaceSelect(updateQuery, setChosenLocation) {\n  const addressObject = autoComplete.getPlace();\n  console.log(\"address Object =>> \", addressObject);\n\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  if (typeof addressObject !== \"undefined\") {\n    const chosenLocation = {\n      query,\n      lat: addressObject.geometry.location.lat(),\n      lng: addressObject.geometry.location.lng(),\n    };\n    setChosenLocation(chosenLocation);\n  }\n}\n\nfunction LocationAutoCompleteInput({ placeholder }) {\n  const [query, setQuery] = useState(\"\");\n  const [chosenLocation, setChosenLocation] = useState({});\n  const autoCompleteRef = useRef(null);\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${GoogleKey}&libraries=places`,\n      () => handleScriptLoad(setQuery, autoCompleteRef, setChosenLocation)\n    );\n  }, [autoCompleteRef]);\n  return (\n    <div>\n      <input\n        ref={autoCompleteRef}\n        onChange={(event) => setQuery(event.target.value)}\n        placeholder={placeholder}\n        value={query}\n      />\n      <div>{chosenLocation.query}</div>\n      <div>{chosenLocation.lat}</div>\n      <div>{chosenLocation.lng}</div>\n    </div>\n  );\n}\nexport default LocationAutoCompleteInput;\n","/Users/alexandra/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":10,"column":27,"nodeType":"60","messageId":"61","endLine":10,"endColumn":45},{"ruleId":"62","severity":1,"message":"63","line":44,"column":6,"nodeType":"64","endLine":44,"endColumn":8,"suggestions":"65"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"66","severity":1,"message":"67","line":6,"column":5,"nodeType":"60","messageId":"61","endLine":6,"endColumn":22},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'setUserCoordinates' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initMap'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-unused-vars","'setChosenLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [initMap]",{"range":"73","text":"74"},[1172,1174],"[initMap]"]