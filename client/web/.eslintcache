[{"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/index.tsx":"1","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/reportWebVitals.ts":"2","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/App.tsx":"3","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/index.ts":"4","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx":"5","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx":"6","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx":"7","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx":"8","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx":"9","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx":"10","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/reviewReducer.ts":"11","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/eventReducer.ts":"12","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/authReducer.ts":"13","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/allPOIReducer.ts":"14","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/errorReducer.ts":"15","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/NavBarComponent/NavBar.tsx":"16","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/MapComponent/MapComponent.tsx":"17","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx":"18","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/StarComponent/StarComponent.tsx":"19","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx":"20","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/types.ts":"21","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/index.ts":"22","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/SearchPopOut/SearchPopOut.tsx":"23","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/registerActions.ts":"24","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/POIActions.ts":"25","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/reviewActions.ts":"26","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/userActions.ts":"27","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/eventActions.ts":"28","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/config.ts":"29"},{"size":963,"mtime":1612774180248,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1612167618401,"results":"32","hashOfConfig":"31"},{"size":1379,"mtime":1612774180244,"results":"33","hashOfConfig":"31"},{"size":689,"mtime":1612859093138,"results":"34","hashOfConfig":"31"},{"size":2217,"mtime":1612774180254,"results":"35","hashOfConfig":"31"},{"size":6824,"mtime":1612954917945,"results":"36","hashOfConfig":"31"},{"size":8443,"mtime":1612954909109,"results":"37","hashOfConfig":"31"},{"size":866,"mtime":1612859093135,"results":"38","hashOfConfig":"31"},{"size":2727,"mtime":1612774180255,"results":"39","hashOfConfig":"31"},{"size":890,"mtime":1612774180254,"results":"40","hashOfConfig":"31"},{"size":664,"mtime":1612774180259,"results":"41","hashOfConfig":"31"},{"size":635,"mtime":1612774180259,"results":"42","hashOfConfig":"31"},{"size":695,"mtime":1612774180258,"results":"43","hashOfConfig":"31"},{"size":542,"mtime":1612859093137,"results":"44","hashOfConfig":"31"},{"size":334,"mtime":1612774180258,"results":"45","hashOfConfig":"31"},{"size":1875,"mtime":1612774180245,"results":"46","hashOfConfig":"31"},{"size":3409,"mtime":1612951303668,"results":"47","hashOfConfig":"31"},{"size":743,"mtime":1612606193948,"results":"48","hashOfConfig":"31"},{"size":615,"mtime":1612859093132,"results":"49","hashOfConfig":"31"},{"size":1164,"mtime":1612954892311,"results":"50","hashOfConfig":"31"},{"size":600,"mtime":1612774180257,"results":"51","hashOfConfig":"31"},{"size":475,"mtime":1612774180256,"results":"52","hashOfConfig":"31"},{"size":1708,"mtime":1612859093132,"results":"53","hashOfConfig":"31"},{"size":1219,"mtime":1612859093136,"results":"54","hashOfConfig":"31"},{"size":1471,"mtime":1612884302455,"results":"55","hashOfConfig":"31"},{"size":4051,"mtime":1612859093137,"results":"56","hashOfConfig":"31"},{"size":1479,"mtime":1612955273120,"results":"57","hashOfConfig":"31"},{"size":2825,"mtime":1612859093136,"results":"58","hashOfConfig":"31"},{"size":153,"mtime":1612951432253,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1uaz7ci",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/index.tsx",[],["125","126"],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/reportWebVitals.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/App.tsx",["127","128"],"import React from 'react';\nimport HomeScreen from './screens/HomeScreen/HomeScreen';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { CreateEventScreen } from './screens/CreateEventScreen/CreateEventScreen';\nimport { CreateTipScreen } from './screens/CreateTipScreen/CreateTipScreen';\nimport { RegisterScreen } from './screens/RegisterScreen/RegisterScreen';\nimport { LoginScreen } from './screens/LoginScreen/LoginScreen';\nimport { DisplayPOIScreen } from './screens/DisplayPOIScreen/DisplayPOIScreen';\nimport { NavBar } from './components/NavBarComponent/NavBar';\nimport { store } from './index';\n\nexport type AppDispatch = typeof store.dispatch;\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/pointOfInterest\">\n            <DisplayPOIScreen />\n          </Route>\n          <Route path=\"/login\">\n            <LoginScreen />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterScreen />\n          </Route>\n          <Route path=\"/createEvent\">\n            <CreateEventScreen />\n          </Route>\n          <Route path=\"/createTip\">\n            <CreateTipScreen />\n          </Route>\n          <Route path=\"/\">\n            <HomeScreen />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/index.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx",["129","130","131"],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx",["132","133"],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/reviewReducer.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/eventReducer.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/authReducer.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/allPOIReducer.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/errorReducer.ts",["134"],"import { FrontierAction } from '../../interfaces/reducerInterfaces';\nimport { SET_ERROR, CLEAR_ERROR } from '../actions/types';\n\nconst reducer = (state = '', action: FrontierAction<string>) => {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/NavBarComponent/NavBar.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/MapComponent/MapComponent.tsx",["135","136"],"import { GoogleKey } from \"../../config\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport \"./MapComponent.css\";\nimport { SearchPopOut } from \"../../components/SearchPopOut/SearchPopOut\";\nimport { POI, SystemState } from \"../../interfaces/reducerInterfaces\";\nimport { getAllPOI } from \"../../store/actions\";\n\ninterface MarkerInfo {\n  pointOfInterestId: string;\n  formattedAddress: string;\n  latitude: string;\n  longitude: string;\n  createdAt: string;\n  updatedAt: string;\n}\nconst initialState: MarkerInfo = {\n  pointOfInterestId: \"\",\n  formattedAddress: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  createdAt: \"\",\n  updatedAt: \"\",\n};\n\ninterface position {\n  lat: number;\n  lng: number;\n}\n\nconst MapComponent = () => {\n  const initialPosition = { lat: 51.46262, lng: -0.2143 };\n\n  const [currentPosition, setCurrentPosition] = useState(initialPosition);\n  const [selected, setSelected] = useState(initialState);\n\n  const allPOI = useSelector((state: SystemState) => state.allPOI);\n  console.log(\"allPOI: \", allPOI);\n\n  const handleUpdateMapCenter = (coordinates: position) => {\n    setCurrentPosition(coordinates);\n  };\n\n  const success = (position: GeolocationPosition) => {\n    const currentPosition = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n    };\n    setCurrentPosition(currentPosition);\n  };\n\n  // const onMarkerDragEnd = (e: google.maps.MapMouseEvent) => {\n  //   const lat = e.latLng.lat();\n  //   const lng = e.latLng.lng();\n  //   setCurrentPosition({ lat, lng });\n  // };\n\n  const onSelect = (item: MarkerInfo) => {\n    setSelected(item);\n  };\n\n  const mapStyles = {\n    height: \"100%\",\n    width: \"100%\",\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success);\n    dispatch(getAllPOI());\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey={GoogleKey} libraries={[\"places\"]}>\n      <SearchPopOut handleUpdateMapCenter={handleUpdateMapCenter} />\n\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n        zoom={15}\n        center={currentPosition}\n      >\n        {Object.keys(allPOI)[0] !== \"POI\" &&\n          Object.values(allPOI).map((POI) => {\n            return (\n              <Marker\n                onClick={() => onSelect(POI)}\n                key={POI.pointOfInterestId}\n                position={{\n                  lat: +POI.latitude,\n                  lng: +POI.longitude,\n                }}\n                title={\"PostgreSQL Party\"}\n                // description={'Descriptions go here'}\n              />\n            );\n          })}\n\n        {selected.pointOfInterestId !== \"\" && (\n          <InfoWindow\n            position={{\n              lat: +selected.latitude,\n              lng: +selected.longitude,\n            }}\n            onCloseClick={() => setSelected(initialState)}\n            key={selected.pointOfInterestId}\n          >\n            <div className=\"infoWindowBody\">\n              <p>{selected.formattedAddress}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default MapComponent;\n\n/* {currentPosition.lat ? (\n    <Marker\n      position={currentPosition}\n      onDragEnd={(e) => onMarkerDragEnd(e)}\n      draggable={true}\n    />\n  ) : null}  */\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/StarComponent/StarComponent.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx",["137"],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/types.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/index.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/SearchPopOut/SearchPopOut.tsx",["138"],"import React, { useState } from \"react\";\nimport \"./SearchPopOut.css\";\nimport { FaSearchLocation } from \"react-icons/fa\";\n\nimport { StandaloneSearchBox } from \"@react-google-maps/api\";\n\ninterface position {\n  lat: number;\n  lng: number;\n}\n\ninterface IProps {\n  handleUpdateMapCenter: handleUpdateMapCenter;\n}\ninterface handleUpdateMapCenter {\n  (coordinates: position): void;\n}\nconst initalSearchBox: any = {};\n\nexport const SearchPopOut = ({ handleUpdateMapCenter }: IProps) => {\n  // const [showSearchPopout, setSearchPopout] = useState(false);\n  const [searchBox, setSearchBox] = useState(initalSearchBox);\n\n  const onLoad = (ref: any) => {\n    if (ref) {\n      setSearchBox(ref);\n    }\n  };\n\n  const onPlacesChanged = () => {\n    const item = searchBox.getPlaces()[0];\n\n    const formattedAddress = item.formatted_address;\n    console.log(\"Formatted Address: \", formattedAddress);\n\n    const position = {\n      lat: item.geometry.location.lat(),\n      lng: item.geometry.location.lng(),\n    };\n    handleUpdateMapCenter(position);\n  };\n\n  // const toggleShowSearchPopout = () => {\n  //   setSearchPopout((showSearchPopout) => !showSearchPopout);\n\n  return (\n    <div className=\"SearchPopOutContainer\">\n      <StandaloneSearchBox onLoad={onLoad} onPlacesChanged={onPlacesChanged}>\n        <input\n          className=\"searchBoxInput\"\n          type=\"text\"\n          placeholder=\"Customized your placeholder\"\n        />\n      </StandaloneSearchBox>\n    </div>\n  );\n};\n\n// {\n//   /* <button className=\"searchBarButton\">\n//         onClick=\n//         {() => {\n//           toggleShowSearchPopout();\n//         }}\n//         <FaSearchLocation className=\"myReact-icons\" size={50} />\n//       </button>  */\n// }\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/registerActions.ts",["139","140"],"import axios from \"axios\";\nimport { AppDispatch } from \"../../App\";\n\nimport { GET_CURRENT_USER, REGISTER_USER, SET_ERROR } from \"./types\";\n\nconst ip_address = \"localhost\";\n\nconst REACT_APP_SERVER_URI = `http://${ip_address}:5000`;\n\nexport const registerUser = (\n  email: string,\n  password: string,\n  confirmPassword: string,\n  username: string,\n  firstName: string,\n  lastName: string\n) => async (dispatch: AppDispatch) => {\n  const { data } = await axios.post(\n    `${REACT_APP_SERVER_URI}/api/user/register/`,\n    {\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      username: username,\n      firstName: firstName,\n      lastName: lastName,\n    },\n    { withCredentials: true }\n  );\n  dispatch({ type: REGISTER_USER, payload: data.user });\n  try {\n    await localStorage.setItem(\"jwtToken\", data.token);\n  } catch (e) {\n    console.log(e);\n  }\n\n  // The axios request will return the registered user and the token. Only if the object 'user' returned by the server has a property 'email', meaning that it is a user\n  // and not an error, it will take the user to the map screen\n\n  //TODO:\n  // if (data.user.email) {\n  //   navigation.navigate('RegisterDOBScreen');\n  // }\n};\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/POIActions.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/reviewActions.ts",["141","142"],"import axios from \"axios\";\nimport { AppDispatch } from \"../../App\";\nimport {\n  CREATE_REVIEW,\n  GET_CURRENT_REVIEW,\n  EDIT_REVIEW,\n  DELETE_REVIEW,\n} from \"./types\";\nconst ip_address = \"localhost\";\n\nconst REACT_APP_SERVER_URI = `http://${ip_address}:5000`;\n\nexport const createReview = (\n  title: string,\n  description: string,\n  rating: number,\n  budgetLevel: number,\n  safetyRating: number,\n  safetyComment: string,\n  formattedAddress: string,\n  picture: File,\n  latitude: string,\n  longitude: string,\n  tags: string[]\n) => async (dispatch: AppDispatch) => {\n  try {\n    const token = await localStorage.getItem(\"jwtToken\");\n\n    if (token) {\n      const { data } = await axios.post(\n        `${REACT_APP_SERVER_URI}/api/review/postReview/`,\n        {\n          title: title,\n          description: description,\n          rating: rating,\n          budgetLevel: budgetLevel,\n          safetyRating: safetyRating,\n          safetyComment: safetyComment,\n          picture: picture,\n          formattedAddress: formattedAddress,\n          latitude: latitude,\n          longitude: longitude,\n          tags: tags,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      dispatch({ type: CREATE_REVIEW, payload: data });\n\n      //TODO:\n\n      // if (data.title) {\n      //   navigation.navigate('TipNavigator', {\n      //     screen: 'DisplayTipScreen',\n      //   });\n      // }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n// TODO comment out when functional\n// export const editReview = (\n//   reviewId: string,\n//   title: string,\n//   description: string,\n//   rating: number,\n//   budgetLevel: number,\n//   safetyRating: number,\n//   safetyComment: string,\n//   formattedAddress: string,\n//   picture: File,\n//   latitude: string,\n//   longitude: string,\n//   tags: string[],\n//   navigation: Navigation,\n// ) => async (dispatch: AppDispatch) => {\n//   try {\n//     const token = await localStorage.getItem('jwtToken');\n\n//     if (token) {\n//       const { data } = await axios.put(\n//         `${REACT_APP_SERVER_URI}/api/review/editReview/${reviewId}`,\n//         {\n//           title: title,\n//           description: description,\n//           rating: rating,\n//           budgetLevel: budgetLevel,\n//           safetyRating: safetyRating,\n//           safetyComment: safetyComment,\n//           picture: picture,\n//           formattedAddress: formattedAddress,\n//           latitude: latitude,\n//           longitude: longitude,\n//           tags: tags,\n//         },\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         },\n//       );\n//       dispatch({ type: EDIT_REVIEW, payload: data });\n\n//       if (data.title) {\n//         navigation.navigate('TipNavigator', {\n//           screen: 'DisplayTipScreen',\n//         });\n//       }\n//     }\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\nexport const getCurrentReview = (reviewId: string) => async (\n  dispatch: AppDispatch\n) => {\n  try {\n    const token = await localStorage.getItem(\"jwtToken\");\n\n    if (token) {\n      const { data } = await axios.get(\n        `${REACT_APP_SERVER_URI}/api/review/getReviewById/${reviewId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      dispatch({ type: GET_CURRENT_REVIEW, payload: data });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n//TODO comment out when functional\n// export const deleteReview = (reviewId: string) => async (\n//   dispatch: AppDispatch,\n// ) => {\n//   try {\n//     const token = await localStorage.getItem('jwtToken');\n\n//     if (token) {\n//       const { data } = await axios.post(\n//         `${REACT_APP_SERVER_URI}/api/review/deleteReview/${reviewId}`,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         },\n//       );\n//       dispatch({ type: DELETE_REVIEW, payload: data });\n//     }\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/userActions.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/eventActions.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/config.ts",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":4,"column":50,"nodeType":"149","messageId":"150","endLine":4,"endColumn":54},{"ruleId":"147","severity":1,"message":"151","line":10,"column":10,"nodeType":"149","messageId":"150","endLine":10,"endColumn":16},{"ruleId":"147","severity":1,"message":"152","line":40,"column":10,"nodeType":"149","messageId":"150","endLine":40,"endColumn":15},{"ruleId":"153","severity":1,"message":"154","line":53,"column":6,"nodeType":"155","endLine":53,"endColumn":20,"suggestions":"156"},{"ruleId":"147","severity":1,"message":"157","line":55,"column":9,"nodeType":"149","messageId":"150","endLine":55,"endColumn":17},{"ruleId":"147","severity":1,"message":"158","line":51,"column":9,"nodeType":"149","messageId":"150","endLine":51,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":55,"column":6,"nodeType":"155","endLine":55,"endColumn":20,"suggestions":"159"},{"ruleId":"147","severity":1,"message":"160","line":2,"column":21,"nodeType":"149","messageId":"150","endLine":2,"endColumn":32},{"ruleId":"147","severity":1,"message":"161","line":12,"column":10,"nodeType":"149","messageId":"150","endLine":12,"endColumn":13},{"ruleId":"153","severity":1,"message":"162","line":78,"column":6,"nodeType":"155","endLine":78,"endColumn":8,"suggestions":"163"},{"ruleId":"147","severity":1,"message":"164","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":28},{"ruleId":"147","severity":1,"message":"165","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":26},{"ruleId":"147","severity":1,"message":"166","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":26},{"ruleId":"147","severity":1,"message":"167","line":4,"column":43,"nodeType":"149","messageId":"150","endLine":4,"endColumn":52},{"ruleId":"147","severity":1,"message":"168","line":6,"column":3,"nodeType":"149","messageId":"150","endLine":6,"endColumn":14},{"ruleId":"147","severity":1,"message":"169","line":7,"column":3,"nodeType":"149","messageId":"150","endLine":7,"endColumn":16},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'image' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventObject'. Either include it or remove the dependency array. You can also do a functional update 'setEventObject(e => ...)' if you only need 'eventObject' in the 'setEventObject' call.","ArrayExpression",["172"],"'dispatch' is assigned a value but never used.","'handleImageChange' is assigned a value but never used.",["173"],"'CLEAR_ERROR' is defined but never used.","'POI' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["174"],"'ChangeEvent' is defined but never used.","'FaSearchLocation' is defined but never used.","'GET_CURRENT_USER' is defined but never used.","'SET_ERROR' is defined but never used.","'EDIT_REVIEW' is defined but never used.","'DELETE_REVIEW' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"175","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [eventObject, selectedTags]",{"range":"180","text":"181"},{"range":"182","text":"181"},"Update the dependencies array to be: [dispatch]",{"range":"183","text":"184"},[1560,1574],"[eventObject, selectedTags]",[1701,1715],[1953,1955],"[dispatch]"]