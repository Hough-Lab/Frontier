[{"/Users/alexandra/Frontier/client/web/src/index.tsx":"1","/Users/alexandra/Frontier/client/web/src/reportWebVitals.ts":"2","/Users/alexandra/Frontier/client/web/src/App.tsx":"3","/Users/alexandra/Frontier/client/web/src/reducers/index.ts":"4","/Users/alexandra/Frontier/client/web/src/utils/mapFunctions.ts":"5","/Users/alexandra/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx":"6","/Users/alexandra/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx":"7","/Users/alexandra/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx":"8","/Users/alexandra/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx":"9","/Users/alexandra/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx":"10","/Users/alexandra/Frontier/client/web/src/reducers/authReducer.ts":"11","/Users/alexandra/Frontier/client/web/src/reducers/errorReducer.ts":"12","/Users/alexandra/Frontier/client/web/src/reducers/coordinatesReducer.ts":"13","/Users/alexandra/Frontier/client/web/src/actions/coordinatesActions.ts":"14","/Users/alexandra/Frontier/client/web/src/components/LocationAutoCompleteInput/LocationAutoCompleteInput.js":"15","/Users/alexandra/Frontier/client/web/src/components/MapComponent/MapComponent.tsx":"16","/Users/alexandra/Frontier/client/web/src/actions/types.ts":"17","/Users/alexandra/Frontier/client/web/src/googleConfig.js":"18","/Users/alexandra/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx":"19","/Users/alexandra/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx":"20","/Users/alexandra/Frontier/client/web/src/actions/index.ts":"21","/Users/alexandra/Frontier/client/web/src/actions/userActions.ts":"22","/Users/alexandra/Frontier/client/web/src/actions/registerActions.ts":"23","/Users/alexandra/Frontier/client/web/src/actions/eventActions.ts":"24","/Users/alexandra/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx":"25","/Users/alexandra/Frontier/client/web/src/screens/DisplayTipScreen/DisplayTipScreen.tsx":"26","/Users/alexandra/Frontier/client/web/src/screens/DisplayEventScreen/DisplayEventScreen.tsx":"27"},{"size":1123,"mtime":1612454733138,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1612172492756,"results":"30","hashOfConfig":"29"},{"size":2398,"mtime":1612454733153,"results":"31","hashOfConfig":"29"},{"size":370,"mtime":1612425897270,"results":"32","hashOfConfig":"29"},{"size":669,"mtime":1612454733139,"results":"33","hashOfConfig":"29"},{"size":3397,"mtime":1612444841929,"results":"34","hashOfConfig":"29"},{"size":531,"mtime":1612361874343,"results":"35","hashOfConfig":"29"},{"size":456,"mtime":1612425886783,"results":"36","hashOfConfig":"29"},{"size":2261,"mtime":1612425897271,"results":"37","hashOfConfig":"29"},{"size":240,"mtime":1612454733150,"results":"38","hashOfConfig":"29"},{"size":692,"mtime":1612355365328,"results":"39","hashOfConfig":"29"},{"size":331,"mtime":1612355810333,"results":"40","hashOfConfig":"29"},{"size":481,"mtime":1612425897270,"results":"41","hashOfConfig":"29"},{"size":299,"mtime":1612425897267,"results":"42","hashOfConfig":"29"},{"size":2339,"mtime":1612291118234,"results":"43","hashOfConfig":"29"},{"size":2785,"mtime":1612454733152,"results":"44","hashOfConfig":"29"},{"size":428,"mtime":1612437491611,"results":"45","hashOfConfig":"29"},{"size":78,"mtime":1612441537227,"results":"46","hashOfConfig":"29"},{"size":867,"mtime":1612443839847,"results":"47","hashOfConfig":"29"},{"size":743,"mtime":1612447274869,"results":"48","hashOfConfig":"29"},{"size":186,"mtime":1612353396774,"results":"49","hashOfConfig":"29"},{"size":1498,"mtime":1612353396776,"results":"50","hashOfConfig":"29"},{"size":713,"mtime":1612353396775,"results":"51","hashOfConfig":"29"},{"size":2096,"mtime":1612442451088,"results":"52","hashOfConfig":"29"},{"size":250,"mtime":1612444775883,"results":"53","hashOfConfig":"29"},{"size":747,"mtime":1612445843071,"results":"54","hashOfConfig":"29"},{"size":1551,"mtime":1612443818756,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k2wfyn",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexandra/Frontier/client/web/src/index.tsx",[],"/Users/alexandra/Frontier/client/web/src/reportWebVitals.ts",[],["117","118"],"/Users/alexandra/Frontier/client/web/src/App.tsx",["119"],"import React, { useEffect } from 'react';\nimport HomeScreen from './screens/HomeScreen/HomeScreen';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { CreateEventScreen } from './screens/CreateEventScreen/CreateEventScreen';\nimport { CreateTipScreen } from './screens/CreateTipScreen/CreateTipScreen';\nimport { RegisterScreen } from './screens/RegisterScreen/RegisterScreen';\nimport { LoginScreen } from './screens/LoginScreen/LoginScreen';\nimport { DisplayPOIScreen } from './screens/DisplayPOIScreen/DisplayPOIScreen';\nimport { DisplayEventScreen } from './screens/DisplayEventScreen/DisplayEventScreen';\nimport { DisplayTipScreen } from './screens/DisplayTipScreen/DisplayTipScreen';\n\nimport { NavBar } from './components/NavBarComponent/NavBar';\nimport { store } from './index';\n\nexport type AppDispatch = typeof store.dispatch;\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <ul>\n          <li>\n            <Link to=\"/login\">Login</Link>\n          </li>\n          <li>\n            <Link to=\"/register\">Register</Link>\n          </li>\n\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/pointOfInterest\">Point of Interest</Link>\n          </li>\n          <li>\n            <Link to=\"/createEvent\">Create Event</Link>\n          </li>\n          <li>\n            <Link to=\"/viewEvent\">View Event</Link>\n          </li>\n          <li>\n            <Link to=\"/createTip\">Create Tip</Link>\n          </li>\n          <li>\n            <Link to=\"/viewTip\">Tip Event</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route path=\"/pointOfInterest\">\n            <DisplayPOIScreen />\n          </Route>\n          <Route path=\"/login\">\n            <LoginScreen />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterScreen />\n          </Route>\n          <Route path=\"/createEvent\">\n            <CreateEventScreen />\n          </Route>\n          <Route path=\"/viewEvent\">\n            <DisplayEventScreen />\n          </Route>\n          <Route path=\"/createTip\">\n            <CreateTipScreen />\n          </Route>\n          <Route path=\"/viewTip\">\n            <DisplayTipScreen />\n          </Route>\n          <Route path=\"/\">\n            <HomeScreen />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/alexandra/Frontier/client/web/src/reducers/index.ts",[],"/Users/alexandra/Frontier/client/web/src/utils/mapFunctions.ts",[],"/Users/alexandra/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx",["120","121"],"import React, { useState, useCallback } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { createEvent } from '../../actions/eventActions';\nimport { handleImageUpload } from '../../components/UploadImageComponent/UploadImageComponent';\nimport LocationAutoCompleteInput from '../../components/LocationAutoCompleteInput/LocationAutoCompleteInput';\nimport './CreateEventScreen.css';\n\nconst mockArrayTags = ['Food', 'Adventure', 'Nature'];\n\nexport const CreateEventScreen = () => {\n  const [inputValues, setInputValues] = useState({ title: '', location: '' });\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = useCallback(() => {\n    dispatch(createEvent(inputValues.title, inputValues.location));\n  }, [inputValues]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"AddEvent\">\n        <h2> Create Event</h2>\n        <form>\n          <div className=\"photoUploadContainer\">\n            <label>Upload Photo</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onClick={handleImageUpload}\n              multiple={false}\n            />\n          </div>\n\n          <div className=\"titleInputContainer\">\n            <label>Event Name</label>\n            <input\n              type=\"text\"\n              name=\"EventName\"\n              placeholder=\"Type Event Name...\"\n              onClick={(text) => setInputValues({ ...inputValues })}\n            />\n          </div>\n          <div className=\"locationInputContainer\">\n            <label>Location</label>\n            <LocationAutoCompleteInput placeholder=\"Location\" />\n          </div>\n\n          <div className=\"tagSelectionContainer\">\n            <label>Tags:</label>\n            <input type=\"text\" name=\"Tags\" placeholder=\"Input Tags\" />\n            {mockArrayTags.map((tag) => (\n              <div>{tag}</div>\n            ))}\n          </div>\n          <div className=\"dateInputContainer\">\n            <label>From:</label>\n            <input type=\"datetime-local\" name=\"EventDate\" />\n            <label>To:</label>\n            <input type=\"datetime-local\" name=\"EventDate\" />\n          </div>\n\n          <div className=\"selectPrivateEventContainer\">\n            <input\n              type=\"checkbox\"\n              id=\"event\"\n              name=\"isEventPrivate\"\n              value=\"private\"\n            />\n            <label htmlFor=\"event\">Private Event</label>\n          </div>\n          <div className=\"descriptionInputContainer\">\n            <label>Description</label>\n            <textarea name=\"description\" cols={40} rows={5} />\n          </div>\n          <div className=\"ratingInputContainer\">\n            <div className=\"rating\">\n              <span>☆</span>\n              <span>☆</span>\n              <span>☆</span>\n              <span>☆</span>\n              <span>☆</span>\n            </div>\n          </div>\n          <div className=\"priceLevelInputContainer\">\n            <div className=\"rating\">\n              <span>$</span>\n              <span>$</span>\n              <span>$</span>\n            </div>\n          </div>\n          <button type=\"button\" onClick={handleSubmit}>\n            Share\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// const mapStateToProps = ({ event }: { event: Event }) => {\n//   return { event };\n// };\n\n// export default connect(mapStateToProps, { createEvent })(CreateEventScreen);\n","/Users/alexandra/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/reducers/authReducer.ts",[],"/Users/alexandra/Frontier/client/web/src/reducers/errorReducer.ts",["122"],"import { FrontierAction } from \"../interfaces/reducerInterfaces\";\nimport { SET_ERROR, CLEAR_ERROR } from \"../actions/types\";\n\nconst reducer = (state = \"\", action: FrontierAction<string>) => {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/Users/alexandra/Frontier/client/web/src/reducers/coordinatesReducer.ts",[],"/Users/alexandra/Frontier/client/web/src/actions/coordinatesActions.ts",[],"/Users/alexandra/Frontier/client/web/src/components/LocationAutoCompleteInput/LocationAutoCompleteInput.js",["123"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"./LocationAutoCompleteInput.css\";\nimport { GoogleKey } from \"../../googleConfig\";\n\nlet autoComplete;\nlet setChosenLocation;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef, setChosenLocation) {\n  autoComplete = new window.google.maps.places.Autocomplete(\n    autoCompleteRef.current\n  );\n  autoComplete.setFields([\n    \"address_components\",\n    \"formatted_address\",\n    \"geometry\",\n  ]);\n  autoComplete.addListener(\"place_changed\", () =>\n    handlePlaceSelect(updateQuery, setChosenLocation)\n  );\n}\n\nasync function handlePlaceSelect(updateQuery, setChosenLocation) {\n  const addressObject = autoComplete.getPlace();\n  console.log(\"address Object =>> \", addressObject);\n\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  if (typeof addressObject !== \"undefined\") {\n    const chosenLocation = {\n      query,\n      lat: addressObject.geometry.location.lat(),\n      lng: addressObject.geometry.location.lng(),\n    };\n    setChosenLocation(chosenLocation);\n  }\n}\n\nfunction LocationAutoCompleteInput({ placeholder }) {\n  const [query, setQuery] = useState(\"\");\n  const [chosenLocation, setChosenLocation] = useState({});\n  const autoCompleteRef = useRef(null);\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${GoogleKey}&libraries=places`,\n      () => handleScriptLoad(setQuery, autoCompleteRef, setChosenLocation)\n    );\n  }, [autoCompleteRef]);\n  return (\n    <div>\n      <input\n        ref={autoCompleteRef}\n        onChange={(event) => setQuery(event.target.value)}\n        placeholder={placeholder}\n        value={query}\n      />\n      <div>{chosenLocation.query}</div>\n      <div>{chosenLocation.lat}</div>\n      <div>{chosenLocation.lng}</div>\n    </div>\n  );\n}\nexport default LocationAutoCompleteInput;\n",["124","125"],"/Users/alexandra/Frontier/client/web/src/components/MapComponent/MapComponent.tsx",["126"],"import React, { useEffect, CSSProperties } from 'react';\n\nimport './MapComponent.css';\n\nimport { GoogleKey } from '../../googleConfig';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../reducers';\n\ninterface IProps {\n  style: CSSProperties;\n}\n\nvar map: google.maps.Map<HTMLElement>;\nvar marker: google.maps.Marker;\n\nconst MapComponent = ({ style }: IProps) => {\n  const userCoordinates = useSelector((state: RootState) => state.coordinates);\n  function initMap(): void {\n    map = new window.google.maps.Map(\n      document.getElementById('map') as HTMLElement,\n      {\n        center: userCoordinates,\n        zoom: 9,\n        streetViewControl: false,\n      },\n    );\n    //\n    console.log(userCoordinates);\n    // Center map to user's position.\n    map.panTo(userCoordinates);\n    marker = new window.google.maps.Marker({\n      position: userCoordinates,\n      map,\n      title: 'Hello World!',\n    });\n\n    marker.setMap(map);\n  }\n  useEffect(() => {\n    console.log('GoogleKey :>> ', GoogleKey);\n    const googleMapScript = document.createElement('script');\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${GoogleKey}&libraries=places`;\n    googleMapScript.async = true;\n    window.document.body.appendChild(googleMapScript);\n    googleMapScript.addEventListener('load', () => {\n      initMap();\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   marker.setPosition(userCoordinates);\n  //   map.panTo(userCoordinates);\n  // }, [userCoordinates]);\n\n  return (\n    <div style={style} id=\"mapContainer\">\n      <div id=\"map\" />\n    </div>\n  );\n};\nexport default MapComponent;\n","/Users/alexandra/Frontier/client/web/src/actions/types.ts",[],"/Users/alexandra/Frontier/client/web/src/googleConfig.js",[],"/Users/alexandra/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx",[],"/Users/alexandra/Frontier/client/web/src/actions/index.ts",[],"/Users/alexandra/Frontier/client/web/src/actions/userActions.ts",["127","128"],"/Users/alexandra/Frontier/client/web/src/actions/registerActions.ts",["129","130"],"/Users/alexandra/Frontier/client/web/src/actions/eventActions.ts",[],"/Users/alexandra/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/DisplayTipScreen/DisplayTipScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/DisplayEventScreen/DisplayEventScreen.tsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":13,"column":10,"nodeType":"137","messageId":"138","endLine":13,"endColumn":16},{"ruleId":"135","severity":1,"message":"139","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":17,"column":6,"nodeType":"142","endLine":17,"endColumn":19,"suggestions":"143"},{"ruleId":"135","severity":1,"message":"144","line":2,"column":21,"nodeType":"137","messageId":"138","endLine":2,"endColumn":32},{"ruleId":"145","severity":1,"message":"146","line":6,"column":5,"nodeType":"137","messageId":"138","endLine":6,"endColumn":22},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"140","severity":1,"message":"147","line":48,"column":6,"nodeType":"142","endLine":48,"endColumn":8,"suggestions":"148"},{"ruleId":"135","severity":1,"message":"149","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":18},{"ruleId":"135","severity":1,"message":"150","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":17},{"ruleId":"135","severity":1,"message":"151","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":26},{"ruleId":"135","severity":1,"message":"152","line":3,"column":43,"nodeType":"137","messageId":"138","endLine":3,"endColumn":52},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"@typescript-eslint/no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["155"],"'CLEAR_ERROR' is defined but never used.","no-unused-vars","'setChosenLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'initMap'. Either include it or remove the dependency array.",["156"],"'Dispatch' is defined but never used.","'History' is defined but never used.","'GET_CURRENT_USER' is defined but never used.","'SET_ERROR' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [dispatch, inputValues.location, inputValues.title]",{"range":"161","text":"162"},"Update the dependencies array to be: [initMap]",{"range":"163","text":"164"},[733,746],"[dispatch, inputValues.location, inputValues.title]",[1365,1367],"[initMap]"]