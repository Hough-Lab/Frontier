[{"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/index.tsx":"1","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/reportWebVitals.ts":"2","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/App.tsx":"3","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx":"4","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx":"5","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx":"6","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx":"7","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx":"8","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx":"9","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/NavBarComponent/NavBar.tsx":"10","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx":"11","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx":"12","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/MapComponent/MapComponent.tsx":"13","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/googleConfig.js":"14","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/index.ts":"15","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/userActions.ts":"16","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/eventActions.ts":"17","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/reviewActions.ts":"18","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/registerActions.ts":"19","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/POIActions.ts":"20","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/types.ts":"21","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/index.ts":"22","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/allPOIReducer.ts":"23","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/reviewReducer.ts":"24","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/errorReducer.ts":"25","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/authReducer.ts":"26","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/eventReducer.ts":"27","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/StarComponent/StarComponent.tsx":"28","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/SearchPopOut/SearchPopOut.tsx":"29","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/POIInfoWindow/POIInfoWindow.tsx":"30","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/DisplayEventScreen/DisplayEventScreen.tsx":"31","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/DisplayTipScreen/DisplayTipScreen.tsx":"32","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/FullEventsList/FullEventsList.tsx":"33","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/FullTipsList/FullTipsList.tsx":"34","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/POIReducer.ts":"35","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/utils/generalFunctions.ts":"36"},{"size":963,"mtime":1612704000055,"results":"37","hashOfConfig":"38"},{"size":425,"mtime":1612545952372,"results":"39","hashOfConfig":"38"},{"size":1317,"mtime":1612962960063,"results":"40","hashOfConfig":"38"},{"size":6948,"mtime":1612906076313,"results":"41","hashOfConfig":"38"},{"size":1802,"mtime":1612892834743,"results":"42","hashOfConfig":"38"},{"size":2637,"mtime":1612952379895,"results":"43","hashOfConfig":"38"},{"size":8757,"mtime":1612959317265,"results":"44","hashOfConfig":"38"},{"size":2785,"mtime":1612946140318,"results":"45","hashOfConfig":"38"},{"size":3128,"mtime":1612959317266,"results":"46","hashOfConfig":"38"},{"size":2575,"mtime":1612906095616,"results":"47","hashOfConfig":"38"},{"size":729,"mtime":1612959317263,"results":"48","hashOfConfig":"38"},{"size":239,"mtime":1612959317264,"results":"49","hashOfConfig":"38"},{"size":3931,"mtime":1612969680072,"results":"50","hashOfConfig":"38"},{"size":39,"mtime":1612992923754,"results":"51","hashOfConfig":"38"},{"size":475,"mtime":1612701446662,"results":"52","hashOfConfig":"38"},{"size":1462,"mtime":1612946140318,"results":"53","hashOfConfig":"38"},{"size":2653,"mtime":1612860493746,"results":"54","hashOfConfig":"38"},{"size":4051,"mtime":1612812355671,"results":"55","hashOfConfig":"38"},{"size":1219,"mtime":1612812355671,"results":"56","hashOfConfig":"38"},{"size":1344,"mtime":1612886571538,"results":"57","hashOfConfig":"38"},{"size":600,"mtime":1612701446664,"results":"58","hashOfConfig":"38"},{"size":747,"mtime":1612886623931,"results":"59","hashOfConfig":"38"},{"size":542,"mtime":1612812851979,"results":"60","hashOfConfig":"38"},{"size":664,"mtime":1612701446667,"results":"61","hashOfConfig":"38"},{"size":334,"mtime":1612701446666,"results":"62","hashOfConfig":"38"},{"size":695,"mtime":1612701446665,"results":"63","hashOfConfig":"38"},{"size":635,"mtime":1612701446666,"results":"64","hashOfConfig":"38"},{"size":615,"mtime":1612812355669,"results":"65","hashOfConfig":"38"},{"size":1708,"mtime":1612812355669,"results":"66","hashOfConfig":"38"},{"size":2216,"mtime":1612887058005,"results":"67","hashOfConfig":"38"},{"size":1559,"mtime":1612546027632,"results":"68","hashOfConfig":"38"},{"size":747,"mtime":1612546027632,"results":"69","hashOfConfig":"38"},{"size":1459,"mtime":1612894868889,"results":"70","hashOfConfig":"38"},{"size":333,"mtime":1612878856141,"results":"71","hashOfConfig":"38"},{"size":534,"mtime":1612884748738,"results":"72","hashOfConfig":"38"},{"size":1892,"mtime":1612946140318,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1kit5rt",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/index.tsx",[],["155","156"],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/reportWebVitals.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/App.tsx",["157"],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx",["158","159"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"./CreateTipScreen.css\";\nimport { handleImageUpload } from \"../../components/UploadImageComponent/UploadImageComponent\";\nimport { StarRating } from \"../../components/StarComponent/StarComponent\";\n\ninterface Tag {\n  reviewTagId: number;\n  tagName: string;\n}\n\nconst mockArrayTags: Tag[] = [\n  { reviewTagId: 1, tagName: \"Food\" },\n  { reviewTagId: 2, tagName: \"Adventure\" },\n  { reviewTagId: 3, tagName: \"Nature\" },\n];\n\nconst emptyTagsArray: Tag[] = [];\n\nconst emptyEventObject = {\n  reviewId: \"fakeEventId\",\n  createdAt: \"fakeTime\",\n  budgetLevel: 5,\n  title: \"\",\n  description: \"\",\n  rating: 5,\n  safetyRating: 3,\n  safetyComment: \"\",\n  picture: \"\",\n  pointOfInterestId: \"fakePointId\",\n  tags: emptyTagsArray,\n};\n\nexport function CreateTipScreen() {\n  const [inputValues, setInputValues] = useState({ title: \"\", location: \"\" });\n  const [tagInputValue, setTagInputValue] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState(emptyTagsArray);\n  const [recommendedTags, setRecommendedTags] = useState(mockArrayTags);\n  const [eventObject, setEventObject] = useState(emptyEventObject);\n\n  const handleInputChange = (\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    const { name, value } = e.target;\n    setEventObject({ ...eventObject, [name]: value });\n  };\n\n  useEffect(() => {\n    setEventObject({ ...eventObject, tags: selectedTags });\n  }, [selectedTags]);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent> | any\n  ) => {\n    e.preventDefault();\n    console.log(\"selectedTags :>> \", selectedTags);\n    console.log(\"eventObject :>> \", eventObject);\n  };\n\n  const handleRecommendedTagClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    tag: Tag\n  ) => {\n    e.preventDefault();\n    addTagtoSelected(tag);\n  };\n\n  const handleSelectedTagClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    tag: Tag\n  ) => {\n    e.preventDefault();\n    removeTagFromSelected(tag);\n  };\n\n  const handleAddUserTag = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n    const newTag = {\n      reviewTagId: 4,\n      tagName: tagInputValue,\n    };\n    addTagtoSelected(newTag);\n    setTagInputValue(\"\");\n  };\n\n  const addTagtoSelected = (tag: Tag) => {\n    setSelectedTags((prevTags) => [...prevTags, tag]);\n    setRecommendedTags((prevTags) => prevTags.filter((el) => el !== tag));\n  };\n\n  const removeTagFromSelected = (tag: Tag) => {\n    setRecommendedTags((prevTags) => [...prevTags, tag]);\n    setSelectedTags((prevTags) => prevTags.filter((el) => el !== tag));\n  };\n\n  const handleTagInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTagInputValue(e.target.value);\n  };\n\n  return (\n    <div className=\"AddEvent\">\n      <h2>Create Travel Tip</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"photoUploadContainer\">\n          <label className=\"eventScreenLabel\">Upload Photo</label>\n          <input\n            name=\"picture\"\n            type=\"file\"\n            accept=\"image/*\"\n            onClick={handleImageUpload}\n            multiple={false}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"titleInputContainer\">\n          <label className=\"eventScreenLabel\">Tip Name</label>\n          <input\n            className=\"formInput\"\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Type Event Name...\"\n            onClick={(text) => setInputValues({ ...inputValues })}\n            onChange={handleInputChange}\n            value={eventObject.title}\n          />\n        </div>\n\n        {/*//TODO check if location is need or it is linked with point of interest if so add auto location api google\n        <div className=\"locationInputContainer\">\n          <label className=\"eventScreenLabel\">Location</label>\n \n\n        <input\n            onChange={handleInputChange}\n            name=\"location\"\n            className=\"textInput\"\n            type=\"text\"\n            placeholder=\"Location\"\n            value={eventObject.location}\n          ></input>\n        </div> */}\n\n        <div className=\"tagSelectionContainer\">\n          <label className=\"eventScreenLabel\">Tags:</label>\n          <input\n            className=\"formInput\"\n            onChange={handleTagInputChange}\n            value={tagInputValue}\n            type=\"text\"\n            name=\"Tags\"\n            placeholder=\"Input Tags\"\n          />\n          <button\n            className=\"tagsAddButton\"\n            onClick={(e) => handleAddUserTag(e)}\n          >\n            +\n          </button>\n\n          <div className=\"tagsContainer\">\n            {selectedTags.map((tag) => (\n              <button\n                onClick={(e) => handleSelectedTagClick(e, tag)}\n                className=\"tagButton selectedTag\"\n              >\n                {tag.tagName}\n              </button>\n            ))}\n          </div>\n\n          <div className=\"tagsContainer\">\n            {recommendedTags.map((tag) => (\n              <button\n                onClick={(e) => handleRecommendedTagClick(e, tag)}\n                className=\"tagButton\"\n              >\n                {tag.tagName}\n              </button>\n            ))}\n          </div>\n        </div>\n        <div className=\"descriptionInputContainer\">\n          <label className=\"eventScreenLabel\">Description</label>\n          <textarea\n            onChange={handleInputChange}\n            className=\"descriptionInputContainer\"\n            name=\"description\"\n            cols={40}\n            rows={5}\n            value={eventObject.description}\n          />\n        </div>\n\n        <div className=\"descriptionInputContainer\">\n          <label className=\"eventScreenLabel\">Safety Comment</label>\n          <textarea\n            onChange={handleInputChange}\n            className=\"descriptionInputContainer\"\n            name=\"description\"\n            cols={40}\n            rows={5}\n            value={eventObject.safetyComment}\n          />\n        </div>\n\n        <div className=\"priceLevelInputContainer\">\n          <div className=\"rating\">\n            <p>Safety Rating</p>\n            <span>$</span>\n            <span>$</span>\n            <span>$</span>\n          </div>\n        </div>\n\n        <div className=\"ratingInputContainer\">\n          <div className=\"rating\">\n            <StarRating totalStars={5} />\n          </div>\n        </div>\n        <div className=\"priceLevelInputContainer\">\n          <div className=\"rating\">\n            <span>$</span>\n            <span>$</span>\n            <span>$</span>\n          </div>\n        </div>\n\n        <div className=\"shareButtonContainer\">\n          <button type=\"submit\" className=\"shareButton\">\n            Share\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx",["160"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createEvent, getAllPOI } from \"../../store/actions\";\nimport { handleImageUpload } from \"../../components/UploadImageComponent/UploadImageComponent\";\n// import LocationAutoCompleteInput from '../../components/LocationAutoCompleteInput/LocationAutoCompleteInput';\nimport \"./CreateEventScreen.css\";\n\nlet mockArrayTags: string[] = [\"Food\", \"Adventure\", \"Nature\"];\n\nconst emptyTagsArray: string[] = [];\n\nconst emptyEventObject = {\n  title: \"\",\n  formattedAddress: \"\",\n  latitude: 0,\n  longitude: 0,\n  dateFrom: \"\",\n  dateTo: \"\",\n  description: \"\",\n  maxCapacity: 10,\n  isPrivate: false,\n  picture: \"\",\n  tags: emptyTagsArray,\n};\n\nexport const CreateEventScreen = () => {\n  const [inputValues, setInputValues] = useState({ title: \"\", location: \"\" });\n  const [tagInputValue, setTagInputValue] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState(emptyTagsArray);\n  const [recommendedTags, setRecommendedTags] = useState(mockArrayTags);\n  const [eventObject, setEventObject] = useState(emptyEventObject);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = (\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    const { name, value } = e.target;\n    setEventObject({ ...eventObject, [name]: value });\n  };\n\n  useEffect(() => {\n    setEventObject({ ...eventObject, tags: selectedTags });\n  }, [selectedTags]);\n\n  const handleSubmit = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent> | any\n  ) => {\n    e.preventDefault();\n    console.log(\"selectedTags :>> \", selectedTags);\n    console.log(\"eventObject :>> \", eventObject);\n    await dispatch(\n      createEvent(\n        eventObject.title,\n        eventObject.formattedAddress,\n        eventObject.latitude,\n        eventObject.longitude,\n        eventObject.dateFrom,\n        eventObject.dateTo,\n        eventObject.description,\n        eventObject.maxCapacity,\n        eventObject.isPrivate,\n        eventObject.picture,\n        eventObject.tags\n      )\n    );\n    dispatch(getAllPOI());\n  };\n\n  const handleIsPrivateClick = () => {\n    setEventObject({ ...eventObject, isPrivate: !eventObject.isPrivate });\n  };\n\n  const handleRecommendedTagClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    tag: string\n  ) => {\n    e.preventDefault();\n    addTagtoSelected(tag);\n  };\n\n  const handleSelectedTagClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    tag: string\n  ) => {\n    e.preventDefault();\n    removeTagFromSelected(tag);\n  };\n\n  const handleAddUserTag = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n    const newTag = tagInputValue;\n    addTagtoSelected(newTag);\n    setTagInputValue(\"\");\n  };\n  const addTagtoSelected = (tag: string) => {\n    setSelectedTags((prevTags) => [...prevTags, tag]);\n    setRecommendedTags((prevTags) => prevTags.filter((el) => el !== tag));\n  };\n  const removeTagFromSelected = (tag: string) => {\n    setRecommendedTags((prevTags) => [...prevTags, tag]);\n    setSelectedTags((prevTags) => prevTags.filter((el) => el !== tag));\n  };\n\n  const handleTagInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTagInputValue(e.target.value);\n  };\n\n  // const handleSubmit = useCallback(() => {\n  //   dispatch(createEvent(inputValues.title, inputValues.location));\n  // }, [inputValues]);\n\n  return (\n    <div className=\"block\">\n      <div className=\"eventBlock\">\n        <div className=\"AddEvent\">\n          <h2> Create Event</h2>\n          <form onSubmit={handleSubmit}>\n            <div className=\"photoUploadContainer\">\n              <label className=\"eventScreenLabel\">Upload Photo</label>\n              <input\n                name=\"picture\"\n                type=\"file\"\n                accept=\"image/*\"\n                onClick={handleImageUpload}\n                multiple={false}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"titleInputContainer\">\n              <label className=\"eventScreenLabel\">Event Name</label>\n              <input\n                name=\"title\"\n                className=\"textInput\"\n                type=\"text\"\n                placeholder=\"Type Event Name...\"\n                onClick={(text) => setInputValues({ ...inputValues })}\n                onChange={handleInputChange}\n                value={eventObject.title}\n              />\n            </div>\n            <div className=\"locationInputContainer\">\n              <label className=\"eventScreenLabel\">Location</label>\n              <input\n                onChange={handleInputChange}\n                name=\"formattedAddress\"\n                className=\"textInput\"\n                type=\"text\"\n                placeholder=\"Location\"\n                value={eventObject.formattedAddress}\n              ></input>\n            </div>\n            {/* <div className=\"locationInputContainer\">\n            <label>Location</label>\n            <LocationAutoCompleteInput placeholder=\"Location\" /> \n          </div> */}\n\n            <div className=\"tagSelectionContainer\">\n              <label className=\"eventScreenLabel\">Tags:</label>\n              <input\n                onChange={handleTagInputChange}\n                value={tagInputValue}\n                type=\"text\"\n                name=\"Tags\"\n                placeholder=\"Input Tags\"\n              />\n              <button onClick={(e) => handleAddUserTag(e)}>+</button>\n\n              <div className=\"tagsContainer\">\n                {selectedTags.map((tag) => (\n                  <button\n                    onClick={(e) => handleSelectedTagClick(e, tag)}\n                    className=\"tagButton selectedTag\"\n                  >\n                    {tag}\n                  </button>\n                ))}\n              </div>\n\n              <div className=\"tagsContainer\">\n                {recommendedTags.map((tag) => (\n                  <button\n                    onClick={(e) => handleRecommendedTagClick(e, tag)}\n                    className=\"tagButton\"\n                  >\n                    {tag}\n                  </button>\n                ))}\n              </div>\n            </div>\n            <div className=\"dateInputContainer\">\n              <label className=\"eventScreenLabel\">From:</label>\n              <input\n                onChange={handleInputChange}\n                name=\"dateFrom\"\n                className=\"textInput\"\n                type=\"datetime-local\"\n                value={eventObject.dateFrom}\n              />\n              <label className=\"eventScreenLabel\">To:</label>\n              <input\n                onChange={handleInputChange}\n                name=\"dateTo\"\n                className=\"textInput\"\n                type=\"datetime-local\"\n                value={eventObject.dateTo}\n              />\n            </div>\n\n            <div className=\"descriptionInputContainer\">\n              <label className=\"eventScreenLabel\">Description</label>\n              <textarea\n                onChange={handleInputChange}\n                className=\"createEventTextArea\"\n                name=\"description\"\n                cols={40}\n                rows={5}\n                value={eventObject.description}\n              />\n            </div>\n            <div className=\"selectPrivateEventContainer\">\n              <input\n                onClick={() => handleIsPrivateClick()}\n                className=\"textInput\"\n                type=\"checkbox\"\n                id=\"event\"\n                name=\"isPrivate\"\n                value=\"private\"\n              />\n              <label className=\"eventScreenLabel\" htmlFor=\"event\">\n                Private Event\n              </label>\n            </div>\n            <div className=\"shareButtonContainer\">\n              <button type=\"submit\" className=\"shareButton\">\n                Share\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// const mapStateToProps = ({ event }: { event: Event }) => {\n//   return { event };\n// };\n\n// export default connect(mapStateToProps, { createEvent })(CreateEventScreen);\n","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/NavBarComponent/NavBar.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/MapComponent/MapComponent.tsx",["161"],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/googleConfig.js",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/index.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/userActions.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/eventActions.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/reviewActions.ts",["162","163"],"import axios from 'axios';\nimport { AppDispatch } from '../../App';\nimport {\n  CREATE_REVIEW,\n  GET_CURRENT_REVIEW,\n  EDIT_REVIEW,\n  DELETE_REVIEW,\n} from './types';\nconst ip_address = 'localhost';\n\nconst REACT_APP_SERVER_URI = `http://${ip_address}:5000`;\n\nexport const createReview = (\n  title: string,\n  description: string,\n  rating: number,\n  budgetLevel: number,\n  safetyRating: number,\n  safetyComment: string,\n  formattedAddress: string,\n  picture: File,\n  latitude: string,\n  longitude: string,\n  tags: string[],\n) => async (dispatch: AppDispatch) => {\n  try {\n    const token = await localStorage.getItem('jwtToken');\n\n    if (token) {\n      const { data } = await axios.post(\n        `${REACT_APP_SERVER_URI}/api/review/postReview/`,\n        {\n          title: title,\n          description: description,\n          rating: rating,\n          budgetLevel: budgetLevel,\n          safetyRating: safetyRating,\n          safetyComment: safetyComment,\n          picture: picture,\n          formattedAddress: formattedAddress,\n          latitude: latitude,\n          longitude: longitude,\n          tags: tags,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        },\n      );\n      dispatch({ type: CREATE_REVIEW, payload: data });\n\n      //TODO:\n\n      // if (data.title) {\n      //   navigation.navigate('TipNavigator', {\n      //     screen: 'DisplayTipScreen',\n      //   });\n      // }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n// TODO comment out when functional\n// export const editReview = (\n//   reviewId: string,\n//   title: string,\n//   description: string,\n//   rating: number,\n//   budgetLevel: number,\n//   safetyRating: number,\n//   safetyComment: string,\n//   formattedAddress: string,\n//   picture: File,\n//   latitude: string,\n//   longitude: string,\n//   tags: string[],\n//   navigation: Navigation,\n// ) => async (dispatch: AppDispatch) => {\n//   try {\n//     const token = await localStorage.getItem('jwtToken');\n\n//     if (token) {\n//       const { data } = await axios.put(\n//         `${REACT_APP_SERVER_URI}/api/review/editReview/${reviewId}`,\n//         {\n//           title: title,\n//           description: description,\n//           rating: rating,\n//           budgetLevel: budgetLevel,\n//           safetyRating: safetyRating,\n//           safetyComment: safetyComment,\n//           picture: picture,\n//           formattedAddress: formattedAddress,\n//           latitude: latitude,\n//           longitude: longitude,\n//           tags: tags,\n//         },\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         },\n//       );\n//       dispatch({ type: EDIT_REVIEW, payload: data });\n\n//       if (data.title) {\n//         navigation.navigate('TipNavigator', {\n//           screen: 'DisplayTipScreen',\n//         });\n//       }\n//     }\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\nexport const getCurrentReview = (reviewId: string) => async (\n  dispatch: AppDispatch,\n) => {\n  try {\n    const token = await localStorage.getItem('jwtToken');\n\n    if (token) {\n      const { data } = await axios.get(\n        `${REACT_APP_SERVER_URI}/api/review/getReviewById/${reviewId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        },\n      );\n      dispatch({ type: GET_CURRENT_REVIEW, payload: data });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n//TODO comment out when functional\n// export const deleteReview = (reviewId: string) => async (\n//   dispatch: AppDispatch,\n// ) => {\n//   try {\n//     const token = await localStorage.getItem('jwtToken');\n\n//     if (token) {\n//       const { data } = await axios.post(\n//         `${REACT_APP_SERVER_URI}/api/review/deleteReview/${reviewId}`,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         },\n//       );\n//       dispatch({ type: DELETE_REVIEW, payload: data });\n//     }\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/registerActions.ts",["164","165"],"import axios from 'axios';\nimport { AppDispatch } from '../../App';\n\nimport { GET_CURRENT_USER, REGISTER_USER, SET_ERROR } from './types';\nconst ip_address = 'localhost';\n\nconst REACT_APP_SERVER_URI = `http://${ip_address}:5000`;\n\nexport const registerUser = (\n  email: string,\n  password: string,\n  confirmPassword: string,\n  username: string,\n  firstName: string,\n  lastName: string,\n) => async (dispatch: AppDispatch) => {\n  const { data } = await axios.post(\n    `${REACT_APP_SERVER_URI}/api/user/register/`,\n    {\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      username: username,\n      firstName: firstName,\n      lastName: lastName,\n    },\n    { withCredentials: true },\n  );\n  dispatch({ type: REGISTER_USER, payload: data.user });\n  try {\n    await localStorage.setItem('jwtToken', data.token);\n  } catch (e) {\n    console.log(e);\n  }\n\n  // The axios request will return the registered user and the token. Only if the object 'user' returned by the server has a property 'email', meaning that it is a user\n  // and not an error, it will take the user to the map screen\n\n  //TODO:\n  // if (data.user.email) {\n  //   navigation.navigate('RegisterDOBScreen');\n  // }\n};\n","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/POIActions.ts",["166"],"import axios from \"axios\";\nimport { AppDispatch } from \"../../App\";\nimport { Navigation } from \"../../interfaces/interfaces\";\nimport { GET_ALL_POI, GET_POI_BY_ID } from \"./types\";\nconst ip_address = \"localhost\";\n\nconst REACT_APP_SERVER_URI = `http://${ip_address}:5000`;\n\nexport const getAllPOI = () => async (dispatch: AppDispatch) => {\n  try {\n    const token = await localStorage.getItem(\"jwtToken\");\n\n    if (token) {\n      const { data } = await axios.get(\n        `${REACT_APP_SERVER_URI}/api/POI/getAllPOI/`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (data.length > 0) {\n        dispatch({ type: GET_ALL_POI, payload: data });\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getPOIById = (POIId: string) => async (dispatch: AppDispatch) => {\n  try {\n    const token = await localStorage.getItem(\"jwtToken\");\n\n    if (token) {\n      const { data } = await axios.get(\n        `${REACT_APP_SERVER_URI}/api/POI/getReviewsAndEventsByPOIId/${POIId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      console.log(\"data\", data);\n      if (data.formattedAddress) {\n        dispatch({ type: GET_POI_BY_ID, payload: data });\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/actions/types.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/index.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/allPOIReducer.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/reviewReducer.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/errorReducer.ts",["167"],"import { FrontierAction } from '../../interfaces/reducerInterfaces';\nimport { SET_ERROR, CLEAR_ERROR } from '../actions/types';\n\nconst reducer = (state = '', action: FrontierAction<string>) => {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/authReducer.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/eventReducer.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/StarComponent/StarComponent.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/SearchPopOut/SearchPopOut.tsx",["168"],"import React, { useState } from \"react\";\nimport \"./SearchPopOut.css\";\nimport { FaSearchLocation } from \"react-icons/fa\";\n\nimport { StandaloneSearchBox } from \"@react-google-maps/api\";\n\ninterface position {\n  lat: number;\n  lng: number;\n}\n\ninterface IProps {\n  handleUpdateMapCenter: handleUpdateMapCenter;\n}\ninterface handleUpdateMapCenter {\n  (coordinates: position): void;\n}\nconst initalSearchBox: any = {};\n\nexport const SearchPopOut = ({ handleUpdateMapCenter }: IProps) => {\n  // const [showSearchPopout, setSearchPopout] = useState(false);\n  const [searchBox, setSearchBox] = useState(initalSearchBox);\n\n  const onLoad = (ref: any) => {\n    if (ref) {\n      setSearchBox(ref);\n    }\n  };\n\n  const onPlacesChanged = () => {\n    const item = searchBox.getPlaces()[0];\n\n    const formattedAddress = item.formatted_address;\n    console.log(\"Formatted Address: \", formattedAddress);\n\n    const position = {\n      lat: item.geometry.location.lat(),\n      lng: item.geometry.location.lng(),\n    };\n    handleUpdateMapCenter(position);\n  };\n\n  // const toggleShowSearchPopout = () => {\n  //   setSearchPopout((showSearchPopout) => !showSearchPopout);\n\n  return (\n    <div className=\"SearchPopOutContainer\">\n      <StandaloneSearchBox onLoad={onLoad} onPlacesChanged={onPlacesChanged}>\n        <input\n          className=\"searchBoxInput\"\n          type=\"text\"\n          placeholder=\"Customized your placeholder\"\n        />\n      </StandaloneSearchBox>\n    </div>\n  );\n};\n\n// {\n//   /* <button className=\"searchBarButton\">\n//         onClick=\n//         {() => {\n//           toggleShowSearchPopout();\n//         }}\n//         <FaSearchLocation className=\"myReact-icons\" size={50} />\n//       </button>  */\n// }\n","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/POIInfoWindow/POIInfoWindow.tsx",["169","170","171"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPOIById } from \"../../store/actions/POIActions\";\nimport { Event, Review, SystemState } from \"../../interfaces/reducerInterfaces\";\n\nimport \"./POIInfoWindow.css\";\n\ninterface individualPOI {\n  pointOfInterestId: string;\n  formattedAddress: string;\n  latitude: number;\n  longitude: number;\n  createdAt: string;\n  updatedAt: string;\n  events?: Event[];\n  reviews?: Review[];\n}\n\ninterface IProps {\n  formattedAddress: string;\n  pointOfInterestId: string;\n  toggleShowPointOfInterest: Function;\n}\n\nfunction POIInfoWindow({\n  formattedAddress,\n  pointOfInterestId,\n  toggleShowPointOfInterest,\n}: IProps) {\n  const selectedPOIInfo: individualPOI = useSelector(\n    (state: SystemState) => state.POI\n  );\n  console.log(\"selectedPOIInfo in info window:>> \", selectedPOIInfo);\n  const dispatch = useDispatch();\n\n  //If error try useCallback as in create event dispatch\n  const getPOIInfo = () => {\n    dispatch(getPOIById(pointOfInterestId));\n  };\n\n  const eventsArray = selectedPOIInfo?.events;\n  const reviewsArray = selectedPOIInfo?.reviews;\n\n  useEffect(() => {\n    getPOIInfo();\n  }, [pointOfInterestId]);\n\n  return (\n    <div className=\"POIImageContainer\">\n      <h3 className=\"POITitleName\">{formattedAddress}</h3>\n      <div className=\"pointTagsContainer\">\n        <div>TagName</div>\n        <div>TagName</div>\n        <div>TagName</div>\n      </div>\n\n      <img\n        alt=\"point of interest\"\n        src=\"https://img.delicious.com.au/CKMUcpx-/w1200/del/2015/11/summer-cocktails-24374-3.jpg\"\n        height=\"300\"\n        width=\"300\"\n      />\n      <div className=\"ratingInputContainer\">\n        <div className=\"rating\">\n          <span>☆</span>\n          <span>☆</span>\n          <span>☆</span>\n          <span>☆</span>\n          <span>☆</span>\n        </div>\n      </div>\n      <div className=\"POIInformationText\">\n        <div>10 Events happening at this location</div>\n        <div> 32 Tips provided for this location</div>\n      </div>\n      <button onClick={() => toggleShowPointOfInterest()}>\n        Show Me What's Happening\n      </button>\n    </div>\n  );\n}\n\nexport default POIInfoWindow;\n","/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/DisplayEventScreen/DisplayEventScreen.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/screens/DisplayTipScreen/DisplayTipScreen.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/FullEventsList/FullEventsList.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/components/FullTipsList/FullTipsList.tsx",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/store/reducers/POIReducer.ts",[],"/Users/jamespoulton/coding/codeworks/frontier/Frontier/client/web/src/utils/generalFunctions.ts",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":4,"column":50,"nodeType":"178","messageId":"179","endLine":4,"endColumn":54},{"ruleId":"180","severity":1,"message":"181","line":52,"column":6,"nodeType":"182","endLine":52,"endColumn":20,"suggestions":"183"},{"ruleId":"176","severity":1,"message":"184","line":54,"column":9,"nodeType":"178","messageId":"179","endLine":54,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":46,"column":6,"nodeType":"182","endLine":46,"endColumn":20,"suggestions":"185"},{"ruleId":"180","severity":1,"message":"186","line":89,"column":6,"nodeType":"182","endLine":89,"endColumn":8,"suggestions":"187"},{"ruleId":"176","severity":1,"message":"188","line":6,"column":3,"nodeType":"178","messageId":"179","endLine":6,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":7,"column":3,"nodeType":"178","messageId":"179","endLine":7,"endColumn":16},{"ruleId":"176","severity":1,"message":"190","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":26},{"ruleId":"176","severity":1,"message":"191","line":4,"column":43,"nodeType":"178","messageId":"179","endLine":4,"endColumn":52},{"ruleId":"176","severity":1,"message":"192","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":20},{"ruleId":"176","severity":1,"message":"193","line":2,"column":21,"nodeType":"178","messageId":"179","endLine":2,"endColumn":32},{"ruleId":"176","severity":1,"message":"194","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":26},{"ruleId":"176","severity":1,"message":"195","line":41,"column":9,"nodeType":"178","messageId":"179","endLine":41,"endColumn":20},{"ruleId":"176","severity":1,"message":"196","line":42,"column":9,"nodeType":"178","messageId":"179","endLine":42,"endColumn":21},{"ruleId":"180","severity":1,"message":"197","line":46,"column":6,"nodeType":"182","endLine":46,"endColumn":25,"suggestions":"198"},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventObject'. Either include it or remove the dependency array. You can also do a functional update 'setEventObject(e => ...)' if you only need 'eventObject' in the 'setEventObject' call.","ArrayExpression",["201"],"'dispatch' is assigned a value but never used.",["202"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["203"],"'EDIT_REVIEW' is defined but never used.","'DELETE_REVIEW' is defined but never used.","'GET_CURRENT_USER' is defined but never used.","'SET_ERROR' is defined but never used.","'Navigation' is defined but never used.","'CLEAR_ERROR' is defined but never used.","'FaSearchLocation' is defined but never used.","'eventsArray' is assigned a value but never used.","'reviewsArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPOIInfo'. Either include it or remove the dependency array.",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"205","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [eventObject, selectedTags]",{"range":"212","text":"213"},{"range":"214","text":"213"},"Update the dependencies array to be: [dispatch]",{"range":"215","text":"216"},"Update the dependencies array to be: [getPOIInfo, pointOfInterestId]",{"range":"217","text":"218"},[1519,1533],"[eventObject, selectedTags]",[1473,1487],[2264,2266],"[dispatch]",[1188,1207],"[getPOIInfo, pointOfInterestId]"]