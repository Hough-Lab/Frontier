[{"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/index.tsx":"1","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/reportWebVitals.ts":"2","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/App.tsx":"3","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/index.ts":"4","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx":"5","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx":"6","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx":"7","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx":"8","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx":"9","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx":"10","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/reviewReducer.ts":"11","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/eventReducer.ts":"12","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/authReducer.ts":"13","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/allPOIReducer.ts":"14","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/errorReducer.ts":"15","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/NavBarComponent/NavBar.tsx":"16","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/MapComponent/MapComponent.tsx":"17","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx":"18","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/StarComponent/StarComponent.tsx":"19","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx":"20","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/types.ts":"21","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/index.ts":"22","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/SearchPopOut/SearchPopOut.tsx":"23","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/registerActions.ts":"24","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/POIActions.ts":"25","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/reviewActions.ts":"26","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/userActions.ts":"27","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/eventActions.ts":"28","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/config.ts":"29","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/POIReducer.ts":"30","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/utils/generalFunctions.ts":"31","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/FullTipsList/FullTipsList.tsx":"32","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/FullEventsList/FullEventsList.tsx":"33","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/POIInfoWindow/POIInfoWindow.tsx":"34"},{"size":963,"mtime":1612774180248,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1612167618401,"results":"37","hashOfConfig":"36"},{"size":1379,"mtime":1612774180244,"results":"38","hashOfConfig":"36"},{"size":747,"mtime":1612955338481,"results":"39","hashOfConfig":"36"},{"size":2637,"mtime":1612955338478,"results":"40","hashOfConfig":"36"},{"size":7451,"mtime":1612958937366,"results":"41","hashOfConfig":"36"},{"size":8683,"mtime":1612955338501,"results":"42","hashOfConfig":"36"},{"size":1802,"mtime":1612955338478,"results":"43","hashOfConfig":"36"},{"size":3128,"mtime":1612955338479,"results":"44","hashOfConfig":"36"},{"size":2805,"mtime":1612956032057,"results":"45","hashOfConfig":"36"},{"size":664,"mtime":1612774180259,"results":"46","hashOfConfig":"36"},{"size":635,"mtime":1612774180259,"results":"47","hashOfConfig":"36"},{"size":695,"mtime":1612774180258,"results":"48","hashOfConfig":"36"},{"size":542,"mtime":1612859093137,"results":"49","hashOfConfig":"36"},{"size":334,"mtime":1612774180258,"results":"50","hashOfConfig":"36"},{"size":2575,"mtime":1612955338473,"results":"51","hashOfConfig":"36"},{"size":3469,"mtime":1612955338505,"results":"52","hashOfConfig":"36"},{"size":729,"mtime":1612955338475,"results":"53","hashOfConfig":"36"},{"size":615,"mtime":1612859093132,"results":"54","hashOfConfig":"36"},{"size":1105,"mtime":1612955573964,"results":"55","hashOfConfig":"36"},{"size":600,"mtime":1612774180257,"results":"56","hashOfConfig":"36"},{"size":475,"mtime":1612774180256,"results":"57","hashOfConfig":"36"},{"size":1708,"mtime":1612859093132,"results":"58","hashOfConfig":"36"},{"size":1219,"mtime":1612859093136,"results":"59","hashOfConfig":"36"},{"size":1344,"mtime":1612955338480,"results":"60","hashOfConfig":"36"},{"size":4053,"mtime":1612958766925,"results":"61","hashOfConfig":"36"},{"size":1485,"mtime":1612956144618,"results":"62","hashOfConfig":"36"},{"size":2653,"mtime":1612955338480,"results":"63","hashOfConfig":"36"},{"size":153,"mtime":1612951432253,"results":"64","hashOfConfig":"36"},{"size":534,"mtime":1612955338481,"results":"65","hashOfConfig":"36"},{"size":1892,"mtime":1612955338482,"results":"66","hashOfConfig":"36"},{"size":333,"mtime":1612955338473,"results":"67","hashOfConfig":"36"},{"size":1459,"mtime":1612955338471,"results":"68","hashOfConfig":"36"},{"size":2216,"mtime":1612955338477,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1uaz7ci",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/index.tsx",[],["146","147"],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/reportWebVitals.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/App.tsx",["148","149"],"import React from 'react';\nimport HomeScreen from './screens/HomeScreen/HomeScreen';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { CreateEventScreen } from './screens/CreateEventScreen/CreateEventScreen';\nimport { CreateTipScreen } from './screens/CreateTipScreen/CreateTipScreen';\nimport { RegisterScreen } from './screens/RegisterScreen/RegisterScreen';\nimport { LoginScreen } from './screens/LoginScreen/LoginScreen';\nimport { DisplayPOIScreen } from './screens/DisplayPOIScreen/DisplayPOIScreen';\nimport { NavBar } from './components/NavBarComponent/NavBar';\nimport { store } from './index';\n\nexport type AppDispatch = typeof store.dispatch;\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/pointOfInterest\">\n            <DisplayPOIScreen />\n          </Route>\n          <Route path=\"/login\">\n            <LoginScreen />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterScreen />\n          </Route>\n          <Route path=\"/createEvent\">\n            <CreateEventScreen />\n          </Route>\n          <Route path=\"/createTip\">\n            <CreateTipScreen />\n          </Route>\n          <Route path=\"/\">\n            <HomeScreen />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/index.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx",["150"],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx",["151","152"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createEvent, getAllPOI } from \"../../store/actions\";\nimport UploadImageComponent from \"../../components/UploadImageComponent/UploadImageComponent\";\nimport { StandaloneSearchBox } from \"@react-google-maps/api\";\n\nimport \"./CreateEventScreen.css\";\n\ninterface HTMLInputEvent extends Event {\n  target: HTMLInputElement & EventTarget;\n}\n\nlet mockArrayTags: string[] = [\"Food\", \"Adventure\", \"Nature\"];\n\nconst emptyTagsArray: string[] = [];\n\nconst emptyEventObject = {\n  title: \"\",\n  formattedAddress: \"\",\n  latitude: 0,\n  longitude: 0,\n  dateFrom: \"\",\n  dateTo: \"\",\n  description: \"\",\n  maxCapacity: 10,\n  isPrivate: false,\n  picture: \"\",\n  tags: emptyTagsArray,\n};\nconst initalSearchBox: any = {};\nexport const CreateEventScreen = () => {\n  const [inputValues, setInputValues] = useState({ title: \"\", location: \"\" });\n  const [tagInputValue, setTagInputValue] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState(emptyTagsArray);\n  const [recommendedTags, setRecommendedTags] = useState(mockArrayTags);\n  const [eventObject, setEventObject] = useState(emptyEventObject);\n  const [searchBox, setSearchBox] = useState(initalSearchBox);\n  const [image, setImage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = (\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    const { name, value } = e.target;\n    setEventObject({ ...eventObject, [name]: value });\n  };\n\n  const handleImageChange = (e: HTMLInputEvent) => {};\n\n  useEffect(() => {\n    setEventObject({ ...eventObject, tags: selectedTags });\n  }, [selectedTags]);\n\n  const handleSubmit = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent> | any\n  ) => {\n    e.preventDefault();\n    await dispatch(\n      createEvent(\n        eventObject.title,\n        eventObject.formattedAddress,\n        eventObject.latitude,\n        eventObject.longitude,\n        eventObject.dateFrom,\n        eventObject.dateTo,\n        eventObject.description,\n        eventObject.maxCapacity,\n        eventObject.isPrivate,\n        image,\n        eventObject.tags\n      )\n    );\n    dispatch(getAllPOI());\n  };\n\n  const handleIsPrivateClick = () => {\n    setEventObject({ ...eventObject, isPrivate: !eventObject.isPrivate });\n  };\n\n  const handleRecommendedTagClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    tag: string\n  ) => {\n    e.preventDefault();\n    addTagtoSelected(tag);\n  };\n\n  const handleSelectedTagClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    tag: string\n  ) => {\n    e.preventDefault();\n    removeTagFromSelected(tag);\n  };\n\n  const handleAddUserTag = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n    const newTag = tagInputValue;\n    addTagtoSelected(newTag);\n    setTagInputValue(\"\");\n  };\n  const addTagtoSelected = (tag: string) => {\n    setSelectedTags((prevTags) => [...prevTags, tag]);\n    setRecommendedTags((prevTags) => prevTags.filter((el) => el !== tag));\n  };\n  const removeTagFromSelected = (tag: string) => {\n    setRecommendedTags((prevTags) => [...prevTags, tag]);\n    setSelectedTags((prevTags) => prevTags.filter((el) => el !== tag));\n  };\n\n  const handleTagInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTagInputValue(e.target.value);\n  };\n\n  const onLoad = (ref: any) => {\n    if (ref) {\n      setSearchBox(ref);\n    }\n  };\n\n  const onPlacesChanged = () => {\n    const item = searchBox.getPlaces()[0];\n\n    const newFormattedAddress = item.formatted_address;\n    const newLat = item.geometry.location.lat();\n    const newLng = item.geometry.location.lng();\n\n    setEventObject({\n      ...eventObject,\n      formattedAddress: newFormattedAddress,\n      latitude: newLat,\n      longitude: newLng,\n    });\n  };\n\n  // const handleSubmit = useCallback(() => {\n  //   dispatch(createEvent(inputValues.title, inputValues.location));\n  // }, [inputValues]);\n\n  return (\n    <div className=\"block\">\n      <div className=\"eventBlock\">\n        <div className=\"AddEvent\">\n          <h2> Create Event</h2>\n          <form onSubmit={handleSubmit}>\n            <div className=\"photoUploadContainer\">\n              <label className=\"eventScreenLabel\">Upload Photo</label>\n              <UploadImageComponent setImage={setImage} />\n            </div>\n\n            <div className=\"titleInputContainer\">\n              <label className=\"eventScreenLabel\">Event Name</label>\n              <input\n                name=\"title\"\n                className=\"formInput\"\n                type=\"text\"\n                placeholder=\"Type Event Name...\"\n                onClick={(text) => setInputValues({ ...inputValues })}\n                onChange={handleInputChange}\n                value={eventObject.title}\n              />\n            </div>\n            <div className=\"locationInputContainer\">\n              <label className=\"eventScreenLabel\">Location</label>\n              <StandaloneSearchBox\n                onLoad={onLoad}\n                onPlacesChanged={onPlacesChanged}\n              >\n                <input\n                  className=\"formInput\"\n                  type=\"text\"\n                  placeholder=\"Location\"\n                ></input>\n              </StandaloneSearchBox>\n            </div>\n\n            <div className=\"tagSelectionContainer\">\n              <label className=\"eventScreenLabel\">Tags:</label>\n              <div className=\"tagsAddContainer\">\n                <input\n                  className=\"formInput\"\n                  onChange={handleTagInputChange}\n                  value={tagInputValue}\n                  type=\"text\"\n                  name=\"Tags\"\n                  placeholder=\"Input Tags\"\n                />\n                <button\n                  className=\"tagsAddButton\"\n                  onClick={(e) => handleAddUserTag(e)}\n                >\n                  +\n                </button>\n              </div>\n              <div className=\"tagsContainer\">\n                {selectedTags.map((tag) => (\n                  <button\n                    onClick={(e) => handleSelectedTagClick(e, tag)}\n                    className=\"tagButton selectedTag\"\n                  >\n                    {tag}\n                  </button>\n                ))}\n              </div>\n\n              <div className=\"tagsContainer\">\n                {recommendedTags.map((tag) => (\n                  <button\n                    onClick={(e) => handleRecommendedTagClick(e, tag)}\n                    className=\"tagButton\"\n                  >\n                    {tag}\n                  </button>\n                ))}\n              </div>\n            </div>\n            <div className=\"dateInputContainer\">\n              <label className=\"eventScreenLabel\">From:</label>\n              <input\n                onChange={handleInputChange}\n                name=\"dateFrom\"\n                className=\"formInput\"\n                type=\"datetime-local\"\n                value={eventObject.dateFrom}\n              />\n              <label className=\"eventScreenLabel\">To:</label>\n              <input\n                onChange={handleInputChange}\n                name=\"dateTo\"\n                className=\"formInput\"\n                type=\"datetime-local\"\n                value={eventObject.dateTo}\n              />\n            </div>\n\n            <div className=\"descriptionInputContainer\">\n              <label className=\"eventScreenLabel\">Description</label>\n              <textarea\n                onChange={handleInputChange}\n                className=\"createEventTextArea\"\n                name=\"description\"\n                cols={40}\n                rows={5}\n                value={eventObject.description}\n              />\n            </div>\n            <div className=\"selectPrivateEventContainer\">\n              <input\n                onClick={() => handleIsPrivateClick()}\n                className=\"formInput\"\n                type=\"checkbox\"\n                id=\"event\"\n                name=\"isPrivate\"\n                value=\"private\"\n              />\n              <label className=\"eventScreenLabel\" htmlFor=\"event\">\n                Private Event\n              </label>\n            </div>\n            <div className=\"shareButtonContainer\">\n              <button type=\"submit\" className=\"shareButton\">\n                Share\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// const mapStateToProps = ({ event }: { event: Event }) => {\n//   return { event };\n// };\n\n// export default connect(mapStateToProps, { createEvent })(CreateEventScreen);\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx",["153","154","155"],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/reviewReducer.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/eventReducer.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/authReducer.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/allPOIReducer.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/errorReducer.ts",["156"],"import { FrontierAction } from '../../interfaces/reducerInterfaces';\nimport { SET_ERROR, CLEAR_ERROR } from '../actions/types';\n\nconst reducer = (state = '', action: FrontierAction<string>) => {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/NavBarComponent/NavBar.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/MapComponent/MapComponent.tsx",["157","158"],"import { GoogleKey } from \"../../config\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport \"./MapComponent.css\";\nimport { SearchPopOut } from \"../../components/SearchPopOut/SearchPopOut\";\nimport { POI, SystemState } from \"../../interfaces/reducerInterfaces\";\nimport { getAllPOI } from \"../../store/actions\";\n\ninterface MarkerInfo {\n  pointOfInterestId: string;\n  formattedAddress: string;\n  latitude: string;\n  longitude: string;\n  createdAt: string;\n  updatedAt: string;\n}\nconst initialState: MarkerInfo = {\n  pointOfInterestId: \"\",\n  formattedAddress: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  createdAt: \"\",\n  updatedAt: \"\",\n};\n\ninterface position {\n  lat: number;\n  lng: number;\n}\n\nconst MapComponent = () => {\n  const initialPosition = { lat: 51.46262, lng: -0.2143 };\n\n  const [currentPosition, setCurrentPosition] = useState(initialPosition);\n  const [selected, setSelected] = useState(initialState);\n\n  const allPOI = useSelector((state: SystemState) => state.allPOI);\n  console.log(\"allPOI: \", allPOI);\n\n  const handleUpdateMapCenter = (coordinates: position) => {\n    setCurrentPosition(coordinates);\n  };\n\n  const success = (position: GeolocationPosition) => {\n    const currentPosition = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n    };\n    setCurrentPosition(currentPosition);\n  };\n\n  // const onMarkerDragEnd = (e: google.maps.MapMouseEvent) => {\n  //   const lat = e.latLng.lat();\n  //   const lng = e.latLng.lng();\n  //   setCurrentPosition({ lat, lng });\n  // };\n\n  const onSelect = (item: MarkerInfo) => {\n    setSelected(item);\n  };\n\n  const mapStyles = {\n    height: \"100%\",\n    width: \"100%\",\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success);\n    dispatch(getAllPOI());\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey={GoogleKey} libraries={[\"places\"]}>\n      <SearchPopOut handleUpdateMapCenter={handleUpdateMapCenter} />\n\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n        zoom={15}\n        center={currentPosition}\n      >\n        {Object.keys(allPOI)[0] !== \"POI\" &&\n          Object.values(allPOI).map((POI) => {\n            return (\n              <Marker\n                onClick={() => onSelect(POI)}\n                key={POI.pointOfInterestId}\n                position={{\n                  lat: +POI.latitude,\n                  lng: +POI.longitude,\n                }}\n                title={\"PostgreSQL Party\"}\n                // description={'Descriptions go here'}\n              />\n            );\n          })}\n\n        {selected.pointOfInterestId !== \"\" && (\n          <InfoWindow\n            position={{\n              lat: +selected.latitude,\n              lng: +selected.longitude,\n            }}\n            onCloseClick={() => setSelected(initialState)}\n            key={selected.pointOfInterestId}\n          >\n            <div className=\"infoWindowBody\">\n              <p>{selected.formattedAddress}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default MapComponent;\n\n/* {currentPosition.lat ? (\n    <Marker\n      position={currentPosition}\n      onDragEnd={(e) => onMarkerDragEnd(e)}\n      draggable={true}\n    />\n  ) : null}  */\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/StarComponent/StarComponent.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/types.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/index.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/SearchPopOut/SearchPopOut.tsx",["159"],"import React, { useState } from \"react\";\nimport \"./SearchPopOut.css\";\nimport { FaSearchLocation } from \"react-icons/fa\";\n\nimport { StandaloneSearchBox } from \"@react-google-maps/api\";\n\ninterface position {\n  lat: number;\n  lng: number;\n}\n\ninterface IProps {\n  handleUpdateMapCenter: handleUpdateMapCenter;\n}\ninterface handleUpdateMapCenter {\n  (coordinates: position): void;\n}\nconst initalSearchBox: any = {};\n\nexport const SearchPopOut = ({ handleUpdateMapCenter }: IProps) => {\n  // const [showSearchPopout, setSearchPopout] = useState(false);\n  const [searchBox, setSearchBox] = useState(initalSearchBox);\n\n  const onLoad = (ref: any) => {\n    if (ref) {\n      setSearchBox(ref);\n    }\n  };\n\n  const onPlacesChanged = () => {\n    const item = searchBox.getPlaces()[0];\n\n    const formattedAddress = item.formatted_address;\n    console.log(\"Formatted Address: \", formattedAddress);\n\n    const position = {\n      lat: item.geometry.location.lat(),\n      lng: item.geometry.location.lng(),\n    };\n    handleUpdateMapCenter(position);\n  };\n\n  // const toggleShowSearchPopout = () => {\n  //   setSearchPopout((showSearchPopout) => !showSearchPopout);\n\n  return (\n    <div className=\"SearchPopOutContainer\">\n      <StandaloneSearchBox onLoad={onLoad} onPlacesChanged={onPlacesChanged}>\n        <input\n          className=\"searchBoxInput\"\n          type=\"text\"\n          placeholder=\"Customized your placeholder\"\n        />\n      </StandaloneSearchBox>\n    </div>\n  );\n};\n\n// {\n//   /* <button className=\"searchBarButton\">\n//         onClick=\n//         {() => {\n//           toggleShowSearchPopout();\n//         }}\n//         <FaSearchLocation className=\"myReact-icons\" size={50} />\n//       </button>  */\n// }\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/registerActions.ts",["160","161"],"import axios from \"axios\";\nimport { AppDispatch } from \"../../App\";\n\nimport { GET_CURRENT_USER, REGISTER_USER, SET_ERROR } from \"./types\";\n\nconst ip_address = \"localhost\";\n\nconst REACT_APP_SERVER_URI = `http://${ip_address}:5000`;\n\nexport const registerUser = (\n  email: string,\n  password: string,\n  confirmPassword: string,\n  username: string,\n  firstName: string,\n  lastName: string\n) => async (dispatch: AppDispatch) => {\n  const { data } = await axios.post(\n    `${REACT_APP_SERVER_URI}/api/user/register/`,\n    {\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      username: username,\n      firstName: firstName,\n      lastName: lastName,\n    },\n    { withCredentials: true }\n  );\n  dispatch({ type: REGISTER_USER, payload: data.user });\n  try {\n    await localStorage.setItem(\"jwtToken\", data.token);\n  } catch (e) {\n    console.log(e);\n  }\n\n  // The axios request will return the registered user and the token. Only if the object 'user' returned by the server has a property 'email', meaning that it is a user\n  // and not an error, it will take the user to the map screen\n\n  //TODO:\n  // if (data.user.email) {\n  //   navigation.navigate('RegisterDOBScreen');\n  // }\n};\n","/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/POIActions.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/reviewActions.ts",["162","163"],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/userActions.ts",["164"],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/actions/eventActions.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/config.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/store/reducers/POIReducer.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/utils/generalFunctions.ts",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/FullTipsList/FullTipsList.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/FullEventsList/FullEventsList.tsx",[],"/Users/davidsolsona/Documents/GitHub/Thesis/code/Frontier/client/web/src/components/POIInfoWindow/POIInfoWindow.tsx",["165","166","167"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPOIById } from \"../../store/actions/POIActions\";\nimport { Event, Review, SystemState } from \"../../interfaces/reducerInterfaces\";\n\nimport \"./POIInfoWindow.css\";\n\ninterface individualPOI {\n  pointOfInterestId: string;\n  formattedAddress: string;\n  latitude: number;\n  longitude: number;\n  createdAt: string;\n  updatedAt: string;\n  events?: Event[];\n  reviews?: Review[];\n}\n\ninterface IProps {\n  formattedAddress: string;\n  pointOfInterestId: string;\n  toggleShowPointOfInterest: Function;\n}\n\nfunction POIInfoWindow({\n  formattedAddress,\n  pointOfInterestId,\n  toggleShowPointOfInterest,\n}: IProps) {\n  const selectedPOIInfo: individualPOI = useSelector(\n    (state: SystemState) => state.POI\n  );\n  console.log(\"selectedPOIInfo in info window:>> \", selectedPOIInfo);\n  const dispatch = useDispatch();\n\n  //If error try useCallback as in create event dispatch\n  const getPOIInfo = () => {\n    dispatch(getPOIById(pointOfInterestId));\n  };\n\n  const eventsArray = selectedPOIInfo?.events;\n  const reviewsArray = selectedPOIInfo?.reviews;\n\n  useEffect(() => {\n    getPOIInfo();\n  }, [pointOfInterestId]);\n\n  return (\n    <div className=\"POIImageContainer\">\n      <h3 className=\"POITitleName\">{formattedAddress}</h3>\n      <div className=\"pointTagsContainer\">\n        <div>TagName</div>\n        <div>TagName</div>\n        <div>TagName</div>\n      </div>\n\n      <img\n        alt=\"point of interest\"\n        src=\"https://img.delicious.com.au/CKMUcpx-/w1200/del/2015/11/summer-cocktails-24374-3.jpg\"\n        height=\"300\"\n        width=\"300\"\n      />\n      <div className=\"ratingInputContainer\">\n        <div className=\"rating\">\n          <span>☆</span>\n          <span>☆</span>\n          <span>☆</span>\n          <span>☆</span>\n          <span>☆</span>\n        </div>\n      </div>\n      <div className=\"POIInformationText\">\n        <div>10 Events happening at this location</div>\n        <div> 32 Tips provided for this location</div>\n      </div>\n      <button onClick={() => toggleShowPointOfInterest()}>\n        Show Me What's Happening\n      </button>\n    </div>\n  );\n}\n\nexport default POIInfoWindow;\n",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":4,"column":50,"nodeType":"174","messageId":"175","endLine":4,"endColumn":54},{"ruleId":"172","severity":1,"message":"176","line":10,"column":10,"nodeType":"174","messageId":"175","endLine":10,"endColumn":16},{"ruleId":"177","severity":1,"message":"178","line":46,"column":6,"nodeType":"179","endLine":46,"endColumn":20,"suggestions":"180"},{"ruleId":"172","severity":1,"message":"181","line":51,"column":9,"nodeType":"174","messageId":"175","endLine":51,"endColumn":26},{"ruleId":"177","severity":1,"message":"182","line":55,"column":6,"nodeType":"179","endLine":55,"endColumn":20,"suggestions":"183"},{"ruleId":"172","severity":1,"message":"184","line":1,"column":27,"nodeType":"174","messageId":"175","endLine":1,"endColumn":38},{"ruleId":"172","severity":1,"message":"185","line":1,"column":40,"nodeType":"174","messageId":"175","endLine":1,"endColumn":49},{"ruleId":"172","severity":1,"message":"186","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":14},{"ruleId":"172","severity":1,"message":"187","line":2,"column":21,"nodeType":"174","messageId":"175","endLine":2,"endColumn":32},{"ruleId":"172","severity":1,"message":"188","line":12,"column":10,"nodeType":"174","messageId":"175","endLine":12,"endColumn":13},{"ruleId":"177","severity":1,"message":"189","line":78,"column":6,"nodeType":"179","endLine":78,"endColumn":8,"suggestions":"190"},{"ruleId":"172","severity":1,"message":"191","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":26},{"ruleId":"172","severity":1,"message":"192","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":26},{"ruleId":"172","severity":1,"message":"193","line":4,"column":43,"nodeType":"174","messageId":"175","endLine":4,"endColumn":52},{"ruleId":"172","severity":1,"message":"194","line":6,"column":3,"nodeType":"174","messageId":"175","endLine":6,"endColumn":14},{"ruleId":"172","severity":1,"message":"195","line":7,"column":3,"nodeType":"174","messageId":"175","endLine":7,"endColumn":16},{"ruleId":"172","severity":1,"message":"193","line":4,"column":41,"nodeType":"174","messageId":"175","endLine":4,"endColumn":50},{"ruleId":"172","severity":1,"message":"196","line":41,"column":9,"nodeType":"174","messageId":"175","endLine":41,"endColumn":20},{"ruleId":"172","severity":1,"message":"197","line":42,"column":9,"nodeType":"174","messageId":"175","endLine":42,"endColumn":21},{"ruleId":"177","severity":1,"message":"198","line":46,"column":6,"nodeType":"179","endLine":46,"endColumn":25,"suggestions":"199"},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reviewObject'. Either include it or remove the dependency array. You can also do a functional update 'setReviewObject(r => ...)' if you only need 'reviewObject' in the 'setReviewObject' call.","ArrayExpression",["202"],"'handleImageChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'eventObject'. Either include it or remove the dependency array. You can also do a functional update 'setEventObject(e => ...)' if you only need 'eventObject' in the 'setEventObject' call.",["203"],"'useCallback' is defined but never used.","'useEffect' is defined but never used.","'lottie' is defined but never used.","'CLEAR_ERROR' is defined but never used.","'POI' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["204"],"'FaSearchLocation' is defined but never used.","'GET_CURRENT_USER' is defined but never used.","'SET_ERROR' is defined but never used.","'EDIT_REVIEW' is defined but never used.","'DELETE_REVIEW' is defined but never used.","'eventsArray' is assigned a value but never used.","'reviewsArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPOIInfo'. Either include it or remove the dependency array.",["205"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [reviewObject, selectedTags]",{"range":"214","text":"215"},"Update the dependencies array to be: [eventObject, selectedTags]",{"range":"216","text":"217"},"Update the dependencies array to be: [dispatch]",{"range":"218","text":"219"},"Update the dependencies array to be: [getPOIInfo, pointOfInterestId]",{"range":"220","text":"221"},[1508,1522],"[reviewObject, selectedTags]",[1701,1715],"[eventObject, selectedTags]",[1953,1955],"[dispatch]",[1188,1207],"[getPOIInfo, pointOfInterestId]"]