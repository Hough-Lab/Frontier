[{"/Users/alexandra/Frontier/client/web/src/index.tsx":"1","/Users/alexandra/Frontier/client/web/src/reportWebVitals.ts":"2","/Users/alexandra/Frontier/client/web/src/App.tsx":"3","/Users/alexandra/Frontier/client/web/src/store/reducers/index.ts":"4","/Users/alexandra/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx":"5","/Users/alexandra/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx":"6","/Users/alexandra/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx":"7","/Users/alexandra/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx":"8","/Users/alexandra/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx":"9","/Users/alexandra/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx":"10","/Users/alexandra/Frontier/client/web/src/store/reducers/reviewReducer.ts":"11","/Users/alexandra/Frontier/client/web/src/store/reducers/eventReducer.ts":"12","/Users/alexandra/Frontier/client/web/src/store/reducers/errorReducer.ts":"13","/Users/alexandra/Frontier/client/web/src/store/reducers/authReducer.ts":"14","/Users/alexandra/Frontier/client/web/src/store/reducers/allPOIReducer.ts":"15","/Users/alexandra/Frontier/client/web/src/components/StarComponent/StarComponent.tsx":"16","/Users/alexandra/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx":"17","/Users/alexandra/Frontier/client/web/src/components/NavBarComponent/NavBar.tsx":"18","/Users/alexandra/Frontier/client/web/src/components/MapComponent/MapComponent.tsx":"19","/Users/alexandra/Frontier/client/web/src/components/FullEventsList/FullEventsList.tsx":"20","/Users/alexandra/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx":"21","/Users/alexandra/Frontier/client/web/src/components/FullTipsList/FullTipsList.tsx":"22","/Users/alexandra/Frontier/client/web/src/store/actions/types.ts":"23","/Users/alexandra/Frontier/client/web/src/store/actions/index.ts":"24","/Users/alexandra/Frontier/client/web/src/googleConfig.js":"25","/Users/alexandra/Frontier/client/web/src/components/SearchPopOut/SearchPopOut.tsx":"26","/Users/alexandra/Frontier/client/web/src/components/POIInfoWindow/POIInfoWindow.tsx":"27","/Users/alexandra/Frontier/client/web/src/store/actions/userActions.ts":"28","/Users/alexandra/Frontier/client/web/src/store/actions/reviewActions.ts":"29","/Users/alexandra/Frontier/client/web/src/store/actions/registerActions.ts":"30","/Users/alexandra/Frontier/client/web/src/store/actions/eventActions.ts":"31","/Users/alexandra/Frontier/client/web/src/store/actions/POIActions.ts":"32","/Users/alexandra/Frontier/client/web/src/utils/generalFunctions.ts":"33","/Users/alexandra/Frontier/client/web/src/store/reducers/POIReducer.ts":"34"},{"size":963,"mtime":1612773985831,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1612172492756,"results":"37","hashOfConfig":"36"},{"size":1379,"mtime":1612618164422,"results":"38","hashOfConfig":"36"},{"size":747,"mtime":1612906557172,"results":"39","hashOfConfig":"36"},{"size":6948,"mtime":1612945818310,"results":"40","hashOfConfig":"36"},{"size":8757,"mtime":1612948180823,"results":"41","hashOfConfig":"36"},{"size":3128,"mtime":1612949752156,"results":"42","hashOfConfig":"36"},{"size":2785,"mtime":1612889766045,"results":"43","hashOfConfig":"36"},{"size":2637,"mtime":1612945818311,"results":"44","hashOfConfig":"36"},{"size":1802,"mtime":1612906557170,"results":"45","hashOfConfig":"36"},{"size":664,"mtime":1612860156467,"results":"46","hashOfConfig":"36"},{"size":635,"mtime":1612860156466,"results":"47","hashOfConfig":"36"},{"size":334,"mtime":1612860156465,"results":"48","hashOfConfig":"36"},{"size":695,"mtime":1612860156465,"results":"49","hashOfConfig":"36"},{"size":542,"mtime":1612860156464,"results":"50","hashOfConfig":"36"},{"size":615,"mtime":1612795065743,"results":"51","hashOfConfig":"36"},{"size":239,"mtime":1612949323609,"results":"52","hashOfConfig":"36"},{"size":2575,"mtime":1612945818309,"results":"53","hashOfConfig":"36"},{"size":3475,"mtime":1612877932321,"results":"54","hashOfConfig":"36"},{"size":1459,"mtime":1612906557167,"results":"55","hashOfConfig":"36"},{"size":729,"mtime":1612950525771,"results":"56","hashOfConfig":"36"},{"size":333,"mtime":1612906557167,"results":"57","hashOfConfig":"36"},{"size":600,"mtime":1612860156463,"results":"58","hashOfConfig":"36"},{"size":475,"mtime":1612860156462,"results":"59","hashOfConfig":"36"},{"size":78,"mtime":1612860205027,"results":"60","hashOfConfig":"36"},{"size":1708,"mtime":1612879767067,"results":"61","hashOfConfig":"36"},{"size":2216,"mtime":1612906557167,"results":"62","hashOfConfig":"36"},{"size":1462,"mtime":1612885155492,"results":"63","hashOfConfig":"36"},{"size":4051,"mtime":1612860156463,"results":"64","hashOfConfig":"36"},{"size":1219,"mtime":1612860156462,"results":"65","hashOfConfig":"36"},{"size":2653,"mtime":1612877932328,"results":"66","hashOfConfig":"36"},{"size":1344,"mtime":1612906557170,"results":"67","hashOfConfig":"36"},{"size":1892,"mtime":1612889279263,"results":"68","hashOfConfig":"36"},{"size":534,"mtime":1612906557172,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1k2wfyn",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexandra/Frontier/client/web/src/index.tsx",[],["148","149"],"/Users/alexandra/Frontier/client/web/src/reportWebVitals.ts",[],"/Users/alexandra/Frontier/client/web/src/App.tsx",["150","151"],"import React from 'react';\nimport HomeScreen from './screens/HomeScreen/HomeScreen';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { CreateEventScreen } from './screens/CreateEventScreen/CreateEventScreen';\nimport { CreateTipScreen } from './screens/CreateTipScreen/CreateTipScreen';\nimport { RegisterScreen } from './screens/RegisterScreen/RegisterScreen';\nimport { LoginScreen } from './screens/LoginScreen/LoginScreen';\nimport { DisplayPOIScreen } from './screens/DisplayPOIScreen/DisplayPOIScreen';\nimport { NavBar } from './components/NavBarComponent/NavBar';\nimport { store } from './index';\n\nexport type AppDispatch = typeof store.dispatch;\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/pointOfInterest\">\n            <DisplayPOIScreen />\n          </Route>\n          <Route path=\"/login\">\n            <LoginScreen />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterScreen />\n          </Route>\n          <Route path=\"/createEvent\">\n            <CreateEventScreen />\n          </Route>\n          <Route path=\"/createTip\">\n            <CreateTipScreen />\n          </Route>\n          <Route path=\"/\">\n            <HomeScreen />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/alexandra/Frontier/client/web/src/store/reducers/index.ts",[],"/Users/alexandra/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx",["152","153"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"./CreateTipScreen.css\";\nimport { handleImageUpload } from \"../../components/UploadImageComponent/UploadImageComponent\";\nimport { StarRating } from \"../../components/StarComponent/StarComponent\";\n\ninterface Tag {\n  reviewTagId: number;\n  tagName: string;\n}\n\nconst mockArrayTags: Tag[] = [\n  { reviewTagId: 1, tagName: \"Food\" },\n  { reviewTagId: 2, tagName: \"Adventure\" },\n  { reviewTagId: 3, tagName: \"Nature\" },\n];\n\nconst emptyTagsArray: Tag[] = [];\n\nconst emptyEventObject = {\n  reviewId: \"fakeEventId\",\n  createdAt: \"fakeTime\",\n  budgetLevel: 5,\n  title: \"\",\n  description: \"\",\n  rating: 5,\n  safetyRating: 3,\n  safetyComment: \"\",\n  picture: \"\",\n  pointOfInterestId: \"fakePointId\",\n  tags: emptyTagsArray,\n};\n\nexport function CreateTipScreen() {\n  const [inputValues, setInputValues] = useState({ title: \"\", location: \"\" });\n  const [tagInputValue, setTagInputValue] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState(emptyTagsArray);\n  const [recommendedTags, setRecommendedTags] = useState(mockArrayTags);\n  const [eventObject, setEventObject] = useState(emptyEventObject);\n\n  const handleInputChange = (\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    const { name, value } = e.target;\n    setEventObject({ ...eventObject, [name]: value });\n  };\n\n  useEffect(() => {\n    setEventObject({ ...eventObject, tags: selectedTags });\n  }, [selectedTags]);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent> | any\n  ) => {\n    e.preventDefault();\n    console.log(\"selectedTags :>> \", selectedTags);\n    console.log(\"eventObject :>> \", eventObject);\n  };\n\n  const handleRecommendedTagClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    tag: Tag\n  ) => {\n    e.preventDefault();\n    addTagtoSelected(tag);\n  };\n\n  const handleSelectedTagClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    tag: Tag\n  ) => {\n    e.preventDefault();\n    removeTagFromSelected(tag);\n  };\n\n  const handleAddUserTag = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n    const newTag = {\n      reviewTagId: 4,\n      tagName: tagInputValue,\n    };\n    addTagtoSelected(newTag);\n    setTagInputValue(\"\");\n  };\n\n  const addTagtoSelected = (tag: Tag) => {\n    setSelectedTags((prevTags) => [...prevTags, tag]);\n    setRecommendedTags((prevTags) => prevTags.filter((el) => el !== tag));\n  };\n\n  const removeTagFromSelected = (tag: Tag) => {\n    setRecommendedTags((prevTags) => [...prevTags, tag]);\n    setSelectedTags((prevTags) => prevTags.filter((el) => el !== tag));\n  };\n\n  const handleTagInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTagInputValue(e.target.value);\n  };\n\n  return (\n    <div className=\"AddEvent\">\n      <h2>Create Travel Tip</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"photoUploadContainer\">\n          <label className=\"eventScreenLabel\">Upload Photo</label>\n          <input\n            name=\"picture\"\n            type=\"file\"\n            accept=\"image/*\"\n            onClick={handleImageUpload}\n            multiple={false}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"titleInputContainer\">\n          <label className=\"eventScreenLabel\">Tip Name</label>\n          <input\n            className=\"formInput\"\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Type Event Name...\"\n            onClick={(text) => setInputValues({ ...inputValues })}\n            onChange={handleInputChange}\n            value={eventObject.title}\n          />\n        </div>\n\n        {/*//TODO check if location is need or it is linked with point of interest if so add auto location api google\n        <div className=\"locationInputContainer\">\n          <label className=\"eventScreenLabel\">Location</label>\n \n\n        <input\n            onChange={handleInputChange}\n            name=\"location\"\n            className=\"textInput\"\n            type=\"text\"\n            placeholder=\"Location\"\n            value={eventObject.location}\n          ></input>\n        </div> */}\n\n        <div className=\"tagSelectionContainer\">\n          <label className=\"eventScreenLabel\">Tags:</label>\n          <input\n            className=\"formInput\"\n            onChange={handleTagInputChange}\n            value={tagInputValue}\n            type=\"text\"\n            name=\"Tags\"\n            placeholder=\"Input Tags\"\n          />\n          <button\n            className=\"tagsAddButton\"\n            onClick={(e) => handleAddUserTag(e)}\n          >\n            +\n          </button>\n\n          <div className=\"tagsContainer\">\n            {selectedTags.map((tag) => (\n              <button\n                onClick={(e) => handleSelectedTagClick(e, tag)}\n                className=\"tagButton selectedTag\"\n              >\n                {tag.tagName}\n              </button>\n            ))}\n          </div>\n\n          <div className=\"tagsContainer\">\n            {recommendedTags.map((tag) => (\n              <button\n                onClick={(e) => handleRecommendedTagClick(e, tag)}\n                className=\"tagButton\"\n              >\n                {tag.tagName}\n              </button>\n            ))}\n          </div>\n        </div>\n        <div className=\"descriptionInputContainer\">\n          <label className=\"eventScreenLabel\">Description</label>\n          <textarea\n            onChange={handleInputChange}\n            className=\"descriptionInputContainer\"\n            name=\"description\"\n            cols={40}\n            rows={5}\n            value={eventObject.description}\n          />\n        </div>\n\n        <div className=\"descriptionInputContainer\">\n          <label className=\"eventScreenLabel\">Saftey Comment</label>\n          <textarea\n            onChange={handleInputChange}\n            className=\"descriptionInputContainer\"\n            name=\"description\"\n            cols={40}\n            rows={5}\n            value={eventObject.safetyComment}\n          />\n        </div>\n\n        <div className=\"priceLevelInputContainer\">\n          <div className=\"rating\">\n            <p>saftey rating</p>\n            <span>$</span>\n            <span>$</span>\n            <span>$</span>\n          </div>\n        </div>\n\n        <div className=\"ratingInputContainer\">\n          <div className=\"rating\">\n            <StarRating totalStars={5} />\n          </div>\n        </div>\n        <div className=\"priceLevelInputContainer\">\n          <div className=\"rating\">\n            <span>$</span>\n            <span>$</span>\n            <span>$</span>\n          </div>\n        </div>\n\n        <div className=\"shareButtonContainer\">\n          <button type=\"submit\" className=\"shareButton\">\n            Share\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/Users/alexandra/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx",["154"],"/Users/alexandra/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx",["155","156","157"],"/Users/alexandra/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/store/reducers/reviewReducer.ts",[],"/Users/alexandra/Frontier/client/web/src/store/reducers/eventReducer.ts",[],"/Users/alexandra/Frontier/client/web/src/store/reducers/errorReducer.ts",["158"],"import { FrontierAction } from '../../interfaces/reducerInterfaces';\nimport { SET_ERROR, CLEAR_ERROR } from '../actions/types';\n\nconst reducer = (state = '', action: FrontierAction<string>) => {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/Users/alexandra/Frontier/client/web/src/store/reducers/authReducer.ts",[],"/Users/alexandra/Frontier/client/web/src/store/reducers/allPOIReducer.ts",[],"/Users/alexandra/Frontier/client/web/src/components/StarComponent/StarComponent.tsx",[],"/Users/alexandra/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx",[],"/Users/alexandra/Frontier/client/web/src/components/NavBarComponent/NavBar.tsx",[],"/Users/alexandra/Frontier/client/web/src/components/MapComponent/MapComponent.tsx",["159"],"import { GoogleKey } from \"../../googleConfig\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport \"./MapComponent.css\";\nimport { SearchPopOut } from \"../../components/SearchPopOut/SearchPopOut\";\nimport POIInfoWindow from \"../POIInfoWindow/POIInfoWindow\";\nimport { SystemState } from \"../../interfaces/reducerInterfaces\";\nimport { getAllPOI } from \"../../store/actions\";\n\ninterface MarkerInfo {\n  pointOfInterestId: string;\n  formattedAddress: string;\n  latitude: string;\n  longitude: string;\n  createdAt: string;\n  updatedAt: string;\n}\nconst initialState: MarkerInfo = {\n  pointOfInterestId: \"\",\n  formattedAddress: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  createdAt: \"\",\n  updatedAt: \"\",\n};\n\ninterface position {\n  lat: number;\n  lng: number;\n}\n\ninterface IProps {\n  toggleShowPointOfInterest: Function;\n}\n\nconst MapComponent = ({ toggleShowPointOfInterest }: IProps) => {\n  const initialPosition = { lat: 51.46262, lng: -0.2143 };\n\n  const [currentPosition, setCurrentPosition] = useState(initialPosition);\n  const [selected, setSelected] = useState(initialState);\n\n  const allPOI = useSelector((state: SystemState) => state.allPOI);\n  console.log(\"allPOI: \", allPOI);\n\n  const handleUpdateMapCenter = (coordinates: position) => {\n    setCurrentPosition(coordinates);\n  };\n\n  const success = (position: GeolocationPosition) => {\n    const currentPosition = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n    };\n    setCurrentPosition(currentPosition);\n  };\n\n  const onSelect = (item: MarkerInfo) => {\n    setSelected(item);\n  };\n\n  const mapStyles = {\n    height: \"100%\",\n    width: \"100%\",\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success);\n    dispatch(getAllPOI());\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey={GoogleKey} libraries={[\"places\"]}>\n      <SearchPopOut handleUpdateMapCenter={handleUpdateMapCenter} />\n\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n        zoom={15}\n        center={currentPosition}\n      >\n        {Object.keys(allPOI)[0] !== \"POI\" &&\n          Object.values(allPOI).map((POI) => {\n            return (\n              <Marker\n                onClick={() => onSelect(POI)}\n                key={POI.pointOfInterestId}\n                position={{\n                  lat: +POI.latitude,\n                  lng: +POI.longitude,\n                }}\n              />\n            );\n          })}\n\n        {selected.pointOfInterestId !== \"\" && (\n          <InfoWindow\n            position={{\n              lat: +selected.latitude,\n              lng: +selected.longitude,\n            }}\n            onCloseClick={() => setSelected(initialState)}\n            key={selected.pointOfInterestId}\n          >\n            <div className=\"infoWindowBody\">\n              <POIInfoWindow\n                formattedAddress={selected.formattedAddress}\n                pointOfInterestId={selected.pointOfInterestId}\n                toggleShowPointOfInterest={toggleShowPointOfInterest}\n              />\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default MapComponent;\n\n/* {currentPosition.lat ? (\n    <Marker\n      position={currentPosition}\n      onDragEnd={(e) => onMarkerDragEnd(e)}\n      draggable={true}\n    />\n  ) : null}  */\n","/Users/alexandra/Frontier/client/web/src/components/FullEventsList/FullEventsList.tsx",[],"/Users/alexandra/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx",[],"/Users/alexandra/Frontier/client/web/src/components/FullTipsList/FullTipsList.tsx",[],"/Users/alexandra/Frontier/client/web/src/store/actions/types.ts",[],"/Users/alexandra/Frontier/client/web/src/store/actions/index.ts",[],"/Users/alexandra/Frontier/client/web/src/googleConfig.js",[],["160","161"],"/Users/alexandra/Frontier/client/web/src/components/SearchPopOut/SearchPopOut.tsx",["162"],"/Users/alexandra/Frontier/client/web/src/components/POIInfoWindow/POIInfoWindow.tsx",["163","164","165"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPOIById } from \"../../store/actions/POIActions\";\nimport { Event, Review, SystemState } from \"../../interfaces/reducerInterfaces\";\n\nimport \"./POIInfoWindow.css\";\n\ninterface individualPOI {\n  pointOfInterestId: string;\n  formattedAddress: string;\n  latitude: number;\n  longitude: number;\n  createdAt: string;\n  updatedAt: string;\n  events?: Event[];\n  reviews?: Review[];\n}\n\ninterface IProps {\n  formattedAddress: string;\n  pointOfInterestId: string;\n  toggleShowPointOfInterest: Function;\n}\n\nfunction POIInfoWindow({\n  formattedAddress,\n  pointOfInterestId,\n  toggleShowPointOfInterest,\n}: IProps) {\n  const selectedPOIInfo: individualPOI = useSelector(\n    (state: SystemState) => state.POI\n  );\n  const dispatch = useDispatch();\n\n  //If error try useCallback as in create event dispatch\n  const getPOIInfo = async () => {\n    await dispatch(getPOIById(pointOfInterestId));\n  };\n\n  const eventsArray = selectedPOIInfo?.events;\n  const reviewsArray = selectedPOIInfo?.reviews;\n\n  useEffect(() => {\n    getPOIInfo();\n  }, [pointOfInterestId]);\n\n  return (\n    <div className=\"POIImageContainer\">\n      <h3 className=\"POITitleName\">{formattedAddress}</h3>\n      <div className=\"pointTagsContainer\">\n        <div>TagName</div>\n        <div>TagName</div>\n        <div>TagName</div>\n      </div>\n\n      <img\n        alt=\"point of interest\"\n        src=\"https://img.delicious.com.au/CKMUcpx-/w1200/del/2015/11/summer-cocktails-24374-3.jpg\"\n        height=\"300\"\n        width=\"300\"\n      />\n      <div className=\"ratingInputContainer\">\n        <div className=\"rating\">\n          <span>☆</span>\n          <span>☆</span>\n          <span>☆</span>\n          <span>☆</span>\n          <span>☆</span>\n        </div>\n      </div>\n      <div className=\"POIInformationText\">\n        <div>10 Events happening at this location</div>\n        <div> 32 Tips provided for this location</div>\n      </div>\n      <button onClick={() => toggleShowPointOfInterest()}>\n        Show Me What's Happening\n      </button>\n    </div>\n  );\n}\n\nexport default POIInfoWindow;\n","/Users/alexandra/Frontier/client/web/src/store/actions/userActions.ts",["166"],"/Users/alexandra/Frontier/client/web/src/store/actions/reviewActions.ts",["167","168"],"import axios from \"axios\";\nimport { AppDispatch } from \"../../App\";\nimport {\n  CREATE_REVIEW,\n  GET_CURRENT_REVIEW,\n  EDIT_REVIEW,\n  DELETE_REVIEW,\n} from \"./types\";\nconst ip_address = \"localhost\";\n\nconst REACT_APP_SERVER_URI = `http://${ip_address}:5000`;\n\nexport const createReview = (\n  title: string,\n  description: string,\n  rating: number,\n  budgetLevel: number,\n  safetyRating: number,\n  safetyComment: string,\n  formattedAddress: string,\n  picture: File,\n  latitude: string,\n  longitude: string,\n  tags: string[]\n) => async (dispatch: AppDispatch) => {\n  try {\n    const token = await localStorage.getItem(\"jwtToken\");\n\n    if (token) {\n      const { data } = await axios.post(\n        `${REACT_APP_SERVER_URI}/api/review/postReview/`,\n        {\n          title: title,\n          description: description,\n          rating: rating,\n          budgetLevel: budgetLevel,\n          safetyRating: safetyRating,\n          safetyComment: safetyComment,\n          picture: picture,\n          formattedAddress: formattedAddress,\n          latitude: latitude,\n          longitude: longitude,\n          tags: tags,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      dispatch({ type: CREATE_REVIEW, payload: data });\n\n      //TODO:\n\n      // if (data.title) {\n      //   navigation.navigate('TipNavigator', {\n      //     screen: 'DisplayTipScreen',\n      //   });\n      // }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n// TODO comment out when functional\n// export const editReview = (\n//   reviewId: string,\n//   title: string,\n//   description: string,\n//   rating: number,\n//   budgetLevel: number,\n//   safetyRating: number,\n//   safetyComment: string,\n//   formattedAddress: string,\n//   picture: File,\n//   latitude: string,\n//   longitude: string,\n//   tags: string[],\n//   navigation: Navigation,\n// ) => async (dispatch: AppDispatch) => {\n//   try {\n//     const token = await localStorage.getItem('jwtToken');\n\n//     if (token) {\n//       const { data } = await axios.put(\n//         `${REACT_APP_SERVER_URI}/api/review/editReview/${reviewId}`,\n//         {\n//           title: title,\n//           description: description,\n//           rating: rating,\n//           budgetLevel: budgetLevel,\n//           safetyRating: safetyRating,\n//           safetyComment: safetyComment,\n//           picture: picture,\n//           formattedAddress: formattedAddress,\n//           latitude: latitude,\n//           longitude: longitude,\n//           tags: tags,\n//         },\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         },\n//       );\n//       dispatch({ type: EDIT_REVIEW, payload: data });\n\n//       if (data.title) {\n//         navigation.navigate('TipNavigator', {\n//           screen: 'DisplayTipScreen',\n//         });\n//       }\n//     }\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\nexport const getCurrentReview = (reviewId: string) => async (\n  dispatch: AppDispatch\n) => {\n  try {\n    const token = await localStorage.getItem(\"jwtToken\");\n\n    if (token) {\n      const { data } = await axios.get(\n        `${REACT_APP_SERVER_URI}/api/review/getReviewById/${reviewId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      dispatch({ type: GET_CURRENT_REVIEW, payload: data });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n//TODO comment out when functional\n// export const deleteReview = (reviewId: string) => async (\n//   dispatch: AppDispatch,\n// ) => {\n//   try {\n//     const token = await localStorage.getItem('jwtToken');\n\n//     if (token) {\n//       const { data } = await axios.post(\n//         `${REACT_APP_SERVER_URI}/api/review/deleteReview/${reviewId}`,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         },\n//       );\n//       dispatch({ type: DELETE_REVIEW, payload: data });\n//     }\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n","/Users/alexandra/Frontier/client/web/src/store/actions/registerActions.ts",["169","170"],"import axios from \"axios\";\nimport { AppDispatch } from \"../../App\";\n\nimport { GET_CURRENT_USER, REGISTER_USER, SET_ERROR } from \"./types\";\n\nconst ip_address = \"localhost\";\n\nconst REACT_APP_SERVER_URI = `http://${ip_address}:5000`;\n\nexport const registerUser = (\n  email: string,\n  password: string,\n  confirmPassword: string,\n  username: string,\n  firstName: string,\n  lastName: string\n) => async (dispatch: AppDispatch) => {\n  const { data } = await axios.post(\n    `${REACT_APP_SERVER_URI}/api/user/register/`,\n    {\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      username: username,\n      firstName: firstName,\n      lastName: lastName,\n    },\n    { withCredentials: true }\n  );\n  dispatch({ type: REGISTER_USER, payload: data.user });\n  try {\n    await localStorage.setItem(\"jwtToken\", data.token);\n  } catch (e) {\n    console.log(e);\n  }\n\n  // The axios request will return the registered user and the token. Only if the object 'user' returned by the server has a property 'email', meaning that it is a user\n  // and not an error, it will take the user to the map screen\n\n  //TODO:\n  // if (data.user.email) {\n  //   navigation.navigate('RegisterDOBScreen');\n  // }\n};\n","/Users/alexandra/Frontier/client/web/src/store/actions/eventActions.ts",[],"/Users/alexandra/Frontier/client/web/src/store/actions/POIActions.ts",["171"],"import axios from \"axios\";\nimport { AppDispatch } from \"../../App\";\nimport { Navigation } from \"../../interfaces/interfaces\";\nimport { GET_ALL_POI, GET_POI_BY_ID } from \"./types\";\nconst ip_address = \"localhost\";\n\nconst REACT_APP_SERVER_URI = `http://${ip_address}:5000`;\n\nexport const getAllPOI = () => async (dispatch: AppDispatch) => {\n  try {\n    const token = await localStorage.getItem(\"jwtToken\");\n\n    if (token) {\n      const { data } = await axios.get(\n        `${REACT_APP_SERVER_URI}/api/POI/getAllPOI/`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (data.length > 0) {\n        dispatch({ type: GET_ALL_POI, payload: data });\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getPOIById = (POIId: string) => async (dispatch: AppDispatch) => {\n  try {\n    const token = await localStorage.getItem(\"jwtToken\");\n\n    if (token) {\n      const { data } = await axios.post(\n        `${REACT_APP_SERVER_URI}/api/POI/getPOIById/${POIId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (data.formattedAddress) {\n        dispatch({ type: GET_POI_BY_ID, payload: data });\n        // TODO navigate to that POI\n        // navigation.navigate('EventNavigator', {\n        //   screen: 'DisplayEventScreen',\n        // });\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n","/Users/alexandra/Frontier/client/web/src/utils/generalFunctions.ts",[],"/Users/alexandra/Frontier/client/web/src/store/reducers/POIReducer.ts",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":4,"column":50,"nodeType":"178","messageId":"179","endLine":4,"endColumn":54},{"ruleId":"176","severity":1,"message":"180","line":10,"column":10,"nodeType":"178","messageId":"179","endLine":10,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":52,"column":6,"nodeType":"183","endLine":52,"endColumn":20,"suggestions":"184"},{"ruleId":"176","severity":1,"message":"185","line":54,"column":9,"nodeType":"178","messageId":"179","endLine":54,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":48,"column":6,"nodeType":"183","endLine":48,"endColumn":20,"suggestions":"186"},{"ruleId":"176","severity":1,"message":"187","line":1,"column":40,"nodeType":"178","messageId":"179","endLine":1,"endColumn":49},{"ruleId":"176","severity":1,"message":"188","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":14},{"ruleId":"181","severity":1,"message":"189","line":44,"column":6,"nodeType":"183","endLine":44,"endColumn":19,"suggestions":"190"},{"ruleId":"176","severity":1,"message":"191","line":2,"column":21,"nodeType":"178","messageId":"179","endLine":2,"endColumn":32},{"ruleId":"181","severity":1,"message":"192","line":77,"column":6,"nodeType":"183","endLine":77,"endColumn":8,"suggestions":"193"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"194","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":26},{"ruleId":"176","severity":1,"message":"195","line":40,"column":9,"nodeType":"178","messageId":"179","endLine":40,"endColumn":20},{"ruleId":"176","severity":1,"message":"196","line":41,"column":9,"nodeType":"178","messageId":"179","endLine":41,"endColumn":21},{"ruleId":"181","severity":1,"message":"197","line":45,"column":6,"nodeType":"183","endLine":45,"endColumn":25,"suggestions":"198"},{"ruleId":"176","severity":1,"message":"199","line":4,"column":41,"nodeType":"178","messageId":"179","endLine":4,"endColumn":50},{"ruleId":"176","severity":1,"message":"200","line":6,"column":3,"nodeType":"178","messageId":"179","endLine":6,"endColumn":14},{"ruleId":"176","severity":1,"message":"201","line":7,"column":3,"nodeType":"178","messageId":"179","endLine":7,"endColumn":16},{"ruleId":"176","severity":1,"message":"202","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":26},{"ruleId":"176","severity":1,"message":"199","line":4,"column":43,"nodeType":"178","messageId":"179","endLine":4,"endColumn":52},{"ruleId":"176","severity":1,"message":"203","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":20},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventObject'. Either include it or remove the dependency array. You can also do a functional update 'setEventObject(e => ...)' if you only need 'eventObject' in the 'setEventObject' call.","ArrayExpression",["206"],"'dispatch' is assigned a value but never used.",["207"],"'useEffect' is defined but never used.","'lottie' is defined but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["208"],"'CLEAR_ERROR' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["209"],"'FaSearchLocation' is defined but never used.","'eventsArray' is assigned a value but never used.","'reviewsArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPOIInfo'. Either include it or remove the dependency array.",["210"],"'SET_ERROR' is defined but never used.","'EDIT_REVIEW' is defined but never used.","'DELETE_REVIEW' is defined but never used.","'GET_CURRENT_USER' is defined but never used.","'Navigation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"211","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [eventObject, selectedTags]",{"range":"220","text":"221"},{"range":"222","text":"221"},"Update the dependencies array to be: [dispatch, loginValues]",{"range":"223","text":"224"},"Update the dependencies array to be: [dispatch]",{"range":"225","text":"226"},"Update the dependencies array to be: [getPOIInfo, pointOfInterestId]",{"range":"227","text":"228"},[1519,1533],"[eventObject, selectedTags]",[1518,1532],[1342,1355],"[dispatch, loginValues]",[1927,1929],"[dispatch]",[1130,1149],"[getPOIInfo, pointOfInterestId]"]