[{"/Users/alexandra/Frontier/client/web/src/index.tsx":"1","/Users/alexandra/Frontier/client/web/src/reportWebVitals.ts":"2","/Users/alexandra/Frontier/client/web/src/App.tsx":"3","/Users/alexandra/Frontier/client/web/src/reducers/index.ts":"4","/Users/alexandra/Frontier/client/web/src/utils/mapFunctions.ts":"5","/Users/alexandra/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx":"6","/Users/alexandra/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx":"7","/Users/alexandra/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx":"8","/Users/alexandra/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx":"9","/Users/alexandra/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx":"10","/Users/alexandra/Frontier/client/web/src/reducers/authReducer.ts":"11","/Users/alexandra/Frontier/client/web/src/reducers/errorReducer.ts":"12","/Users/alexandra/Frontier/client/web/src/reducers/coordinatesReducer.ts":"13","/Users/alexandra/Frontier/client/web/src/actions/coordinatesActions.ts":"14","/Users/alexandra/Frontier/client/web/src/components/LocationAutoCompleteInput/LocationAutoCompleteInput.js":"15","/Users/alexandra/Frontier/client/web/src/components/MapComponent/MapComponent.tsx":"16","/Users/alexandra/Frontier/client/web/src/actions/types.ts":"17","/Users/alexandra/Frontier/client/web/src/googleConfig.js":"18","/Users/alexandra/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx":"19","/Users/alexandra/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx":"20","/Users/alexandra/Frontier/client/web/src/actions/index.ts":"21","/Users/alexandra/Frontier/client/web/src/actions/userActions.ts":"22","/Users/alexandra/Frontier/client/web/src/actions/registerActions.ts":"23","/Users/alexandra/Frontier/client/web/src/actions/eventActions.ts":"24","/Users/alexandra/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx":"25","/Users/alexandra/Frontier/client/web/src/screens/DisplayTipScreen/DisplayTipScreen.tsx":"26","/Users/alexandra/Frontier/client/web/src/screens/DisplayEventScreen/DisplayEventScreen.tsx":"27","/Users/alexandra/Frontier/client/web/src/components/NavBarComponent/NavBar.tsx":"28"},{"size":1123,"mtime":1612454733138,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1612172492756,"results":"31","hashOfConfig":"30"},{"size":2233,"mtime":1612460529175,"results":"32","hashOfConfig":"30"},{"size":370,"mtime":1612425897270,"results":"33","hashOfConfig":"30"},{"size":669,"mtime":1612454733139,"results":"34","hashOfConfig":"30"},{"size":3388,"mtime":1612456737099,"results":"35","hashOfConfig":"30"},{"size":531,"mtime":1612361874343,"results":"36","hashOfConfig":"30"},{"size":456,"mtime":1612425886783,"results":"37","hashOfConfig":"30"},{"size":2261,"mtime":1612425897271,"results":"38","hashOfConfig":"30"},{"size":240,"mtime":1612509948921,"results":"39","hashOfConfig":"30"},{"size":692,"mtime":1612355365328,"results":"40","hashOfConfig":"30"},{"size":331,"mtime":1612355810333,"results":"41","hashOfConfig":"30"},{"size":481,"mtime":1612425897270,"results":"42","hashOfConfig":"30"},{"size":299,"mtime":1612425897267,"results":"43","hashOfConfig":"30"},{"size":2339,"mtime":1612291118234,"results":"44","hashOfConfig":"30"},{"size":2585,"mtime":1612458297824,"results":"45","hashOfConfig":"30"},{"size":428,"mtime":1612437491611,"results":"46","hashOfConfig":"30"},{"size":78,"mtime":1612456094081,"results":"47","hashOfConfig":"30"},{"size":867,"mtime":1612443839847,"results":"48","hashOfConfig":"30"},{"size":743,"mtime":1612447274869,"results":"49","hashOfConfig":"30"},{"size":186,"mtime":1612353396774,"results":"50","hashOfConfig":"30"},{"size":1498,"mtime":1612353396776,"results":"51","hashOfConfig":"30"},{"size":713,"mtime":1612353396775,"results":"52","hashOfConfig":"30"},{"size":2096,"mtime":1612442451088,"results":"53","hashOfConfig":"30"},{"size":250,"mtime":1612444775883,"results":"54","hashOfConfig":"30"},{"size":747,"mtime":1612445843071,"results":"55","hashOfConfig":"30"},{"size":1559,"mtime":1612456864283,"results":"56","hashOfConfig":"30"},{"size":394,"mtime":1612460269946,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k2wfyn",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/alexandra/Frontier/client/web/src/index.tsx",[],"/Users/alexandra/Frontier/client/web/src/reportWebVitals.ts",[],["120","121"],"/Users/alexandra/Frontier/client/web/src/App.tsx",[],"/Users/alexandra/Frontier/client/web/src/reducers/index.ts",[],"/Users/alexandra/Frontier/client/web/src/utils/mapFunctions.ts",[],"/Users/alexandra/Frontier/client/web/src/screens/CreateEventScreen/CreateEventScreen.tsx",["122"],"import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createEvent } from '../../actions/eventActions';\nimport { handleImageUpload } from '../../components/UploadImageComponent/UploadImageComponent';\nimport LocationAutoCompleteInput from '../../components/LocationAutoCompleteInput/LocationAutoCompleteInput';\nimport './CreateEventScreen.css';\n\nconst mockArrayTags = ['Food', 'Adventure', 'Nature'];\n\nexport const CreateEventScreen = () => {\n  const [inputValues, setInputValues] = useState({ title: '', location: '' });\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = useCallback(() => {\n    dispatch(createEvent(inputValues.title, inputValues.location));\n  }, [inputValues]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"AddEvent\">\n        <h2> Create Event</h2>\n        <form>\n          <div className=\"photoUploadContainer\">\n            <label>Upload Photo</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onClick={handleImageUpload}\n              multiple={false}\n            />\n          </div>\n\n          <div className=\"titleInputContainer\">\n            <label>Event Name</label>\n            <input\n              type=\"text\"\n              name=\"EventName\"\n              placeholder=\"Type Event Name...\"\n              onClick={(text) => setInputValues({ ...inputValues })}\n            />\n          </div>\n          <div className=\"locationInputContainer\">\n            <label>Location</label>\n            <LocationAutoCompleteInput placeholder=\"Location\" />\n          </div>\n\n          <div className=\"tagSelectionContainer\">\n            <label>Tags:</label>\n            <input type=\"text\" name=\"Tags\" placeholder=\"Input Tags\" />\n            {mockArrayTags.map((tag) => (\n              <div>{tag}</div>\n            ))}\n          </div>\n          <div className=\"dateInputContainer\">\n            <label>From:</label>\n            <input type=\"datetime-local\" name=\"EventDate\" />\n            <label>To:</label>\n            <input type=\"datetime-local\" name=\"EventDate\" />\n          </div>\n\n          <div className=\"selectPrivateEventContainer\">\n            <input\n              type=\"checkbox\"\n              id=\"event\"\n              name=\"isEventPrivate\"\n              value=\"private\"\n            />\n            <label htmlFor=\"event\">Private Event</label>\n          </div>\n          <div className=\"descriptionInputContainer\">\n            <label>Description</label>\n            <textarea name=\"description\" cols={40} rows={5} />\n          </div>\n          <div className=\"ratingInputContainer\">\n            <div className=\"rating\">\n              <span>☆</span>\n              <span>☆</span>\n              <span>☆</span>\n              <span>☆</span>\n              <span>☆</span>\n            </div>\n          </div>\n          <div className=\"priceLevelInputContainer\">\n            <div className=\"rating\">\n              <span>$</span>\n              <span>$</span>\n              <span>$</span>\n            </div>\n          </div>\n          <button type=\"button\" onClick={handleSubmit}>\n            Share\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// const mapStateToProps = ({ event }: { event: Event }) => {\n//   return { event };\n// };\n\n// export default connect(mapStateToProps, { createEvent })(CreateEventScreen);\n","/Users/alexandra/Frontier/client/web/src/screens/RegisterScreen/RegisterScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/LoginScreen/LoginScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/CreateTipScreen/CreateTipScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/HomeScreen/HomeScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/reducers/authReducer.ts",[],"/Users/alexandra/Frontier/client/web/src/reducers/errorReducer.ts",["123"],"import { FrontierAction } from \"../interfaces/reducerInterfaces\";\nimport { SET_ERROR, CLEAR_ERROR } from \"../actions/types\";\n\nconst reducer = (state = \"\", action: FrontierAction<string>) => {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/Users/alexandra/Frontier/client/web/src/reducers/coordinatesReducer.ts",[],"/Users/alexandra/Frontier/client/web/src/actions/coordinatesActions.ts",[],"/Users/alexandra/Frontier/client/web/src/components/LocationAutoCompleteInput/LocationAutoCompleteInput.js",["124"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"./LocationAutoCompleteInput.css\";\nimport { GoogleKey } from \"../../googleConfig\";\n\nlet autoComplete;\nlet setChosenLocation;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef, setChosenLocation) {\n  autoComplete = new window.google.maps.places.Autocomplete(\n    autoCompleteRef.current\n  );\n  autoComplete.setFields([\n    \"address_components\",\n    \"formatted_address\",\n    \"geometry\",\n  ]);\n  autoComplete.addListener(\"place_changed\", () =>\n    handlePlaceSelect(updateQuery, setChosenLocation)\n  );\n}\n\nasync function handlePlaceSelect(updateQuery, setChosenLocation) {\n  const addressObject = autoComplete.getPlace();\n  console.log(\"address Object =>> \", addressObject);\n\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  if (typeof addressObject !== \"undefined\") {\n    const chosenLocation = {\n      query,\n      lat: addressObject.geometry.location.lat(),\n      lng: addressObject.geometry.location.lng(),\n    };\n    setChosenLocation(chosenLocation);\n  }\n}\n\nfunction LocationAutoCompleteInput({ placeholder }) {\n  const [query, setQuery] = useState(\"\");\n  const [chosenLocation, setChosenLocation] = useState({});\n  const autoCompleteRef = useRef(null);\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${GoogleKey}&libraries=places`,\n      () => handleScriptLoad(setQuery, autoCompleteRef, setChosenLocation)\n    );\n  }, [autoCompleteRef]);\n  return (\n    <div>\n      <input\n        ref={autoCompleteRef}\n        onChange={(event) => setQuery(event.target.value)}\n        placeholder={placeholder}\n        value={query}\n      />\n      <div>{chosenLocation.query}</div>\n      <div>{chosenLocation.lat}</div>\n      <div>{chosenLocation.lng}</div>\n    </div>\n  );\n}\nexport default LocationAutoCompleteInput;\n",["125","126"],"/Users/alexandra/Frontier/client/web/src/components/MapComponent/MapComponent.tsx",["127","128","129","130","131"],"import { GoogleKey } from '../../googleConfig';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n} from '@react-google-maps/api';\n\ninterface Location {\n  name?: string;\n  location?: {\n    lat: number;\n    lng: number;\n  };\n}\n\nconst locations = [\n  {\n    name: 'Location 1',\n    location: {\n      lat: 41.3954,\n      lng: 2.162,\n    },\n  },\n  {\n    name: 'Location 2',\n    location: {\n      lat: 41.3917,\n      lng: 2.1649,\n    },\n  },\n  {\n    name: 'Location 3',\n    location: {\n      lat: 41.3773,\n      lng: 2.1585,\n    },\n  },\n  {\n    name: 'Location 4',\n    location: {\n      lat: 41.3797,\n      lng: 2.1682,\n    },\n  },\n  {\n    name: 'Location 5',\n    location: {\n      lat: 41.4055,\n      lng: 2.1915,\n    },\n  },\n];\n\nconst MapComponent = () => {\n  const initialPosition = { lat: 0, lng: 0 };\n  const [currentPosition, setCurrentPosition] = useState(initialPosition);\n\n  const success = (position: GeolocationPosition) => {\n    const currentPosition = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n    };\n    setCurrentPosition(currentPosition);\n  };\n\n  const onMarkerDragEnd = (e: google.maps.MapMouseEvent) => {\n    const lat = e.latLng.lat();\n    const lng = e.latLng.lng();\n    setCurrentPosition({ lat, lng });\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success);\n  });\n  // let initialState: Location = {};\n  // const [selected, setSelected] = useState(initialState);\n\n  // const onSelect = (item: Location) => {\n  //   setSelected(item);\n  // };\n\n  const mapStyles = {\n    height: '100vh',\n    width: '100%',\n  };\n\n  const defaultCenter = {\n    lat: 41.3851,\n    lng: 2.1734,\n  };\n\n  return (\n    <LoadScript googleMapsApiKey={GoogleKey}>\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n        zoom={13}\n        center={currentPosition}\n      >\n        {currentPosition.lat ? (\n          <Marker\n            position={currentPosition}\n            onDragEnd={(e) => onMarkerDragEnd(e)}\n            draggable={true}\n          />\n        ) : null}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\nexport default MapComponent;\n\n{\n  /* <Marker\n              key={item.name}\n              position={item.location}\n              onClick={() => onSelect(item)}\n            />\n          );\n        })}\n        {selected.location && (\n          <InfoWindow\n            position={selected.location}\n            onCloseClick={() => setSelected({})}\n            key={selected.name}\n          >\n            <p>{selected.name}</p>\n          </InfoWindow> */\n}\n","/Users/alexandra/Frontier/client/web/src/actions/types.ts",[],"/Users/alexandra/Frontier/client/web/src/googleConfig.js",[],"/Users/alexandra/Frontier/client/web/src/screens/DisplayPOIScreen/DisplayPOIScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/components/POIImageComponent/POIImageComponent.tsx",[],"/Users/alexandra/Frontier/client/web/src/actions/index.ts",[],"/Users/alexandra/Frontier/client/web/src/actions/userActions.ts",["132","133"],"/Users/alexandra/Frontier/client/web/src/actions/registerActions.ts",["134","135"],"/Users/alexandra/Frontier/client/web/src/actions/eventActions.ts",[],"/Users/alexandra/Frontier/client/web/src/components/UploadImageComponent/UploadImageComponent.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/DisplayTipScreen/DisplayTipScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/screens/DisplayEventScreen/DisplayEventScreen.tsx",[],"/Users/alexandra/Frontier/client/web/src/components/NavBarComponent/NavBar.tsx",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":17,"column":6,"nodeType":"142","endLine":17,"endColumn":19,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":2,"column":21,"nodeType":"146","messageId":"147","endLine":2,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":6,"column":5,"nodeType":"146","messageId":"147","endLine":6,"endColumn":22},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"144","severity":1,"message":"150","line":8,"column":3,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"144","severity":1,"message":"151","line":11,"column":11,"nodeType":"146","messageId":"147","endLine":11,"endColumn":19},{"ruleId":"144","severity":1,"message":"152","line":19,"column":7,"nodeType":"146","messageId":"147","endLine":19,"endColumn":16},{"ruleId":"144","severity":1,"message":"153","line":90,"column":9,"nodeType":"146","messageId":"147","endLine":90,"endColumn":22},{"ruleId":"154","severity":1,"message":"155","line":115,"column":1,"nodeType":"156","messageId":"157","endLine":131,"endColumn":2},{"ruleId":"144","severity":1,"message":"158","line":1,"column":10,"nodeType":"146","messageId":"147","endLine":1,"endColumn":18},{"ruleId":"144","severity":1,"message":"159","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":17},{"ruleId":"144","severity":1,"message":"160","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":26},{"ruleId":"144","severity":1,"message":"161","line":3,"column":43,"nodeType":"146","messageId":"147","endLine":3,"endColumn":52},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["164"],"@typescript-eslint/no-unused-vars","'CLEAR_ERROR' is defined but never used.","Identifier","unusedVar","no-unused-vars","'setChosenLocation' is defined but never used.","'InfoWindow' is defined but never used.","'Location' is defined but never used.","'locations' is assigned a value but never used.","'defaultCenter' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Dispatch' is defined but never used.","'History' is defined but never used.","'GET_CURRENT_USER' is defined but never used.","'SET_ERROR' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Update the dependencies array to be: [dispatch, inputValues.location, inputValues.title]",{"range":"167","text":"168"},[724,737],"[dispatch, inputValues.location, inputValues.title]"]